{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/TopNav.vue?a6e7","webpack:///./src/utils/local-storage.js","webpack:///./src/utils/string.js","webpack:///./src/store/modules/User.js","webpack:///./src/store/modules/Job.js","webpack:///./src/store/modules/Jobs.js","webpack:///./src/services/JobClustersService.js","webpack:///./src/store/modules/JobCluster.js","webpack:///./src/store/modules/JobClusters.js","webpack:///./src/services/MasterService.js","webpack:///./src/store/modules/Metadata.js","webpack:///./src/services/ArtifactService.js","webpack:///./src/store/modules/Artifact.js","webpack:///./src/store/modules/Artifacts.js","webpack:///./src/store/index.js","webpack:///./src/services/BaseService.js","webpack:///./src/plugins/font-awesome.js","webpack:///./src/plugins/element-ui.js","webpack:///./src/App.vue?f89b","webpack:///./src/components/TopNav.vue?9a65","webpack:///src/components/TopNav.vue","webpack:///./src/components/TopNav.vue?4919","webpack:///./src/components/TopNav.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a37b","webpack:///./src/App.vue","webpack:///./src/middleware/auth.js","webpack:///./src/middleware/page-title.js","webpack:///./src/router.js","webpack:///./src/main.js","webpack:///./src/store/actions.js","webpack:///./src/App.vue?1d3e","webpack:///./src/services/JobsService.js","webpack:///./src/components/TopNav.vue?b51f","webpack:///./src/App.vue?7b0e"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","app","jsonpScriptSrc","p","404","admin","clusters~jobs","clusters~login","clusters","jobs","login","help","summary","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","clearTimeout","chunk","errorType","realSrc","error","undefined","setTimeout","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","user-controls","__webpack_exports__","getUserName","getUserEmail","getMantisMasters","getMesosUrl","setUserName","setUserEmail","setMantisMasters","setMesosUrl","USER_NAME_KEY","USER_EMAIL_KEY","MANTIS_MASTERS_KEY","MESOS_URL_KEY","localStorage","getItem","mastersString","JSON","parse","userName","setItem","userEmail","masters","stringify","mesosUrl","isEmpty","str","LOGIN_USER","LOGOUT_USER","initialState","email","getters","loggedIn","state","actions","[object Object]","ActionTypes","LoginUser","commit","LogoutUser","mutations","User","User_actions","FETCH_JOB_DETAILS","FETCH_ARCHIVED_WORKERS_FOR_JOB","FETCH_JOB_OUTPUT_EVENTS","FETCH_JOB_STATUS_EVENTS","SET_SELECTED_JOB","SET_ARCHIVED_WORKERS_FOR_JOB","SET_JOB_STATUS_EVENTS","SET_JOB_STATUS_SSE","SET_JOB_OUTPUT_EVENTS","SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED","SET_JOB_OUTPUT_SSE","CLEAR_JOB_OUTPUT_EVENTS","STOP_JOB_OUTPUT_SSE","UPDATE_RPS","RESET_JOB_DETAILS","selectedJob","archivedWorkers","isLoadingJobDetails","isFetchingArchivedWorkers","jobStatusEvents","jobOutputEvents","hasJobStatusStarted","hasJobOutputStarted","currentJobOutputMessagePrettyPrinted","rpsPrettyPrintThreshold","jobOutputSse","jobStatusSse","maxJobOutputLength","rps","FetchJobDetails","dispatch","jobId","errors","fetchJobDetails","AddGlobalErrors","FetchArchivedWorkersForJob","fetchJobArchivedWorkers","ResubmitWorker","rootState","workerNumber","user","resubmitWorker","ScaleJobStage","stageNumber","numWorkers","scaleJobStage","KillJobs","jobIds","killJobs","QuickSubmitJob","jobConfig","quickSubmitJob","StreamJobStatus","onOpen","onMessage","record","debug","item","timestamp","status","Date","getTime","message","stageNum","sse","streamJobStatus","StreamJobOutput","jobOutputUrl","streamJobOutput","ClearJobOutput","StopJobOutputStream","ResetJobDetails","UpdateCurrentJobOutputMessagePreview","job","list","events","tail","xs","obj","diff","Math","abs","toFixed","Number","close","Job","Job_getters","Job_actions","SET_PAGE_SIZE","SET_PAGE_NUMBER","FETCH_ALL_JOBS","SET_JOBS_LIST","SET_TOTAL_RESOURCES","pageSize","pageNumber","isLoadingList","totalResources","cpu","memory","total","FetchJobs","searchText","labelFilterText","offset","fetchJobs","UpdateJobsTablePageSize","size","UpdateJobsTablePageNumber","forEach","totCPUs","totMemory","Jobs","Jobs_getters","Jobs_actions","async","fetchJobClusters","searchString","labelFilterString","clients","getClientsForAllRegions","queryString","requests","map","client","handleApiRequests","fetchJobClusterDetails","clusterId","fetchJobsForCluster","createJobCluster","jobCluster","post","updateJobClusterStandard","clusterConfig","put","updateJobClusterQuickArtifact","artifactConfig","updateJobClusterQuickSla","slaConfig","updateJobClusterQuickMigrationStrategy","migrationConfig","updateJobClusterQuickLabel","labels","submitJobForCluster","enableJobCluster","findClientByRegion","disableJobCluster","deleteJobCluster","delete","FETCH_JOB_CLUSTER_DETAILS","SET_SELECTED_JOB_CLUSTER","FETCH_JOB_CLUSTER_JOBS","SET_JOBS_FOR_SELECTED_JOB_CLUSTER","selectedJobCluster","jobsForSelectedJobCluster","isLoadingJobClusterDetails","isLoadingJobClusterJobs","CreateJobCluster","UpdateJobClusterStandard","UpdateJobClusterQuickArtifact","UpdateJobClusterQuickSla","UpdateJobClusterQuickMigrationStrategy","UpdateJobClusterQuickLabel","FetchJobClusterDetails","FetchJobClusterJobs","EnableJobCluster","DisableJobCluster","DeleteJobCluster","SubmitJobForCluster","JobCluster","JobCluster_getters","JobCluster_actions","FETCH_ALL_JOB_CLUSTERS","SET_JOB_CLUSTERS_LIST","FetchJobClusters","UpdateClusterTablePageSize","UpdateClusterTablePageNumber","JobClusters","JobClusters_getters","JobClusters_actions","fetchMasterConfigs","responses","pSettle","dataReponses","response","isFulfilled","getServiceResponseErrors","reason","SET_MANTIS_MASTERS","ADD_GLOBAL_ERRORS","SET_MESOS_URL","SET_MANTIS_MASTER_CONFIGS","mantisMasters","globalErrors","masterConfigs","SetMantisMasters","SetMesosUrl","FetchMasterConfigs","Metadata","Metadata_getters","Metadata_actions","fetchArtifactNames","fetchArtifactProperties","artifactLocation","artifactName","split","pop","replace","uploadArtifact","file","formData","FormData","append","FETCH_ARTIFACT_JSON","SET_SELECTED_ARTIFACT","SET_SELECTED_ARTIFACT_PROPERTIES","selectedArtifact","isLoadingArtifactProperties","selectedArtifactPropertiesJson","FetchJobArtifact","UploadArtifact","artifactPropertiesJson","Artifact","Artifact_getters","Artifact_actions","FETCH_ARTIFACTS_LIST","SET_ARTIFACTS_LIST","isLoadingArtifactsList","artifactNames","FetchArtifacts","Artifacts","Artifacts_getters","Artifacts_actions","Vue","use","Vuex","isDebug","process","Store","jobClusters","metadata","artifact","artifacts","strict","findMantisApiUrlByRegion","createSseEventSource","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_store__WEBPACK_IMPORTED_MODULE_1__","p_settle__WEBPACK_IMPORTED_MODULE_2__","p_settle__WEBPACK_IMPORTED_MODULE_2___default","store","master","axios","baseURL","url","responseURL","onError","eventSource","EventSource","onopen","onmessage","font_awesome","library","add","faRocket","faSitemap","faClock","faBolt","faCog","faArrowsAltH","faArrowDown","faAngleLeft","faClipboard","faSlidersH","component","FontAwesomeIcon","element_ui","loading_default","a","directive","locale","lang","$ELEMENT","zIndex","$loading","service","$confirm","message_box_default","confirm","$message","message_default","render","_vm","this","_h","$createElement","_c","_self","attrs","id","$style","direction","staticClass","user-name","on","on-click-logout","logout","_e","_l","class","title","staticRenderFns","TopNavvue_type_template_id_5041ec45_render","default-active","activeLink","background-color","backgroundColor","text-color","textColor","active-text-color","activeTextColor","unique-opened","router","index","_v","slot","_s","click","handleLogout","TopNavvue_type_template_id_5041ec45_staticRenderFns","TopNavvue_type_script_lang_js_","components","menu_default","menu_item_default","submenu_default","props","String","required","faBars","free_solid_svg_icons_index_es","getComputedStyle","documentElement","getPropertyValue","computed","$route","path","methods","$emit","components_TopNavvue_type_script_lang_js_","injectStyles","context","TopNavvue_type_style_index_0_lang_scss_module_true_","locals","componentNormalizer","TopNav","Appvue_type_script_lang_js_","vue_runtime_esm","extend","container_default","main_default","alert_default","vuex_esm","errorMessages","Set","$router","src_Appvue_type_script_lang_js_","App_injectStyles","Appvue_type_style_index_0_lang_scss_module_true_","App_component","App","auth","to","_from","next","matched","some","meta","requiresAuth","page_title","_next","nearestRouteWithTitle","reverse","find","Router","base","routes","redirect","scrollBehavior","_to","savedPosition","x","y","beforeEach","from","pageTitle","config","productionTip","pluginFontAwesome","pluginElementUi","VueScrollTo","container","VueClipboard","userInfo","h","$mount","UpdateClusterForm","FetchLatestJobForCluster","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_0_0_node_modules_css_loader_index_js_ref_8_oneOf_0_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_0_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_0_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss_module_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_0_0_node_modules_css_loader_index_js_ref_8_oneOf_0_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_0_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_0_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss_module_true___WEBPACK_IMPORTED_MODULE_0___default","streamingOutputUrl","_BaseService__WEBPACK_IMPORTED_MODULE_0__","JobId","StageNumber","NumWorkers","mantisBaseUrl","samplingRate","queryParamString","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_0_0_node_modules_css_loader_index_js_ref_8_oneOf_0_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_0_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_0_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TopNav_vue_vue_type_style_index_0_lang_scss_module_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_0_0_node_modules_css_loader_index_js_ref_8_oneOf_0_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_0_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_0_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TopNav_vue_vue_type_style_index_0_lang_scss_module_true___WEBPACK_IMPORTED_MODULE_0___default","error-alert"],"mappings":"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","file":"js/app.077c8d17.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"404\":\"404\",\"admin\":\"admin\",\"clusters~jobs\":\"clusters~jobs\",\"clusters~login\":\"clusters~login\",\"clusters\":\"clusters\",\"jobs\":\"jobs\",\"login\":\"login\",\"help\":\"help\",\"summary\":\"summary\"}[chunkId]||chunkId) + \".\" + {\"404\":\"c5751946\",\"admin\":\"dffe0087\",\"clusters~jobs\":\"a7c5e6b9\",\"clusters~login\":\"341975ea\",\"clusters\":\"b5f5f755\",\"jobs\":\"b9e68b50\",\"login\":\"8cfb11ec\",\"help\":\"43d43b95\",\"summary\":\"8c961dac\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"clusters~jobs\":1,\"clusters\":1,\"jobs\":1,\"login\":1,\"help\":1,\"summary\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"404\":\"404\",\"admin\":\"admin\",\"clusters~jobs\":\"clusters~jobs\",\"clusters~login\":\"clusters~login\",\"clusters\":\"clusters\",\"jobs\":\"jobs\",\"login\":\"login\",\"help\":\"help\",\"summary\":\"summary\"}[chunkId]||chunkId) + \".\" + {\"404\":\"31d6cfe0\",\"admin\":\"31d6cfe0\",\"clusters~jobs\":\"03a4a63c\",\"clusters~login\":\"31d6cfe0\",\"clusters\":\"57a1656f\",\"jobs\":\"414cc7da\",\"login\":\"60cbb79d\",\"help\":\"1d6e0780\",\"summary\":\"e7959384\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-controls\":\"TopNav_user-controls_1IBco\"};","const USER_NAME_KEY = 'mantisUserName';\nconst USER_EMAIL_KEY = 'mantisUserEmail';\nconst MANTIS_MASTERS_KEY = 'mantisMasters';\nconst MESOS_URL_KEY = 'mesosUrl';\n\nexport function getUserName() {\n  return localStorage.getItem(USER_NAME_KEY);\n}\n\nexport function getUserEmail() {\n  return localStorage.getItem(USER_EMAIL_KEY);\n}\n\nexport function getMantisMasters() {\n  const mastersString = localStorage.getItem(MANTIS_MASTERS_KEY);\n  try {\n    return JSON.parse(mastersString);\n  } catch (e) {\n    return [];\n  }\n}\n\nexport function getMesosUrl() {\n  return localStorage.getItem(MESOS_URL_KEY);\n}\n\nexport function setUserName(userName) {\n  return localStorage.setItem(USER_NAME_KEY, userName);\n}\n\nexport function setUserEmail(userEmail) {\n  return localStorage.setItem(USER_EMAIL_KEY, userEmail);\n}\n\nexport function setMantisMasters(masters) {\n  return localStorage.setItem(MANTIS_MASTERS_KEY, JSON.stringify(masters));\n}\n\nexport function setMesosUrl(mesosUrl) {\n  return localStorage.setItem(MESOS_URL_KEY, mesosUrl);\n}\n","export function isEmpty(str) {\n  return !str || str.length === 0;\n}\n","import { isEmpty } from '@/utils/string';\nimport { ActionTypes } from '@/store/actions';\nimport { setUserEmail, setUserName } from '@/utils/local-storage';\n\n// mutation types\nconst LOGIN_USER = 'LOGIN_USER';\nconst LOGOUT_USER = 'LOGOUT_USER';\n\n// initial state\nconst initialState = {\n  name: '',\n  email: '',\n};\n\n// getters\nconst getters = {\n  loggedIn: state => {\n    return !isEmpty(state.name) && !isEmpty(state.email);\n  },\n};\n\n// actions\nconst actions = {\n  [ActionTypes.LoginUser]({ commit }, { name, email }) {\n    setUserName(name);\n    setUserEmail(email);\n    commit(LOGIN_USER, { name, email });\n  },\n  [ActionTypes.LogoutUser]({ commit }) {\n    setUserName('');\n    setUserEmail('');\n    commit(LOGOUT_USER);\n  },\n};\n\n// mutations\nconst mutations = {\n  [LOGIN_USER](state, { name, email }) {\n    state.name = name;\n    state.email = email;\n  },\n  [LOGOUT_USER](state) {\n    state.name = '';\n    state.email = '';\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import {\n  fetchJobArchivedWorkers,\n  fetchJobDetails,\n  killJobs,\n  quickSubmitJob,\n  resubmitWorker,\n  scaleJobStage,\n  streamJobOutput,\n  streamJobStatus,\n} from '@/services/JobsService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst FETCH_JOB_DETAILS = 'FETCH_JOB_DETAILS';\nconst FETCH_ARCHIVED_WORKERS_FOR_JOB = 'FETCH_ARCHIVED_WORKERS_FOR_JOB';\nconst FETCH_JOB_OUTPUT_EVENTS = 'FETCH_JOB_OUTPUT_EVENTS';\nconst FETCH_JOB_STATUS_EVENTS = 'FETCH_JOB_STATUS_EVENTS';\nconst SET_SELECTED_JOB = 'SET_SELECTED_JOB';\nconst SET_ARCHIVED_WORKERS_FOR_JOB = 'SET_ARCHIVED_WORKERS_FOR_JOB';\nconst SET_JOB_STATUS_EVENTS = 'SET_JOB_STATUS_EVENTS';\nconst SET_JOB_STATUS_SSE = 'SET_JOB_STATUS_SSE';\nconst SET_JOB_OUTPUT_EVENTS = 'SET_JOB_OUTPUT_EVENTS';\nconst SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED = 'SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED';\nconst SET_JOB_OUTPUT_SSE = 'SET_JOB_OUTPUT_SSE';\nconst CLEAR_JOB_OUTPUT_EVENTS = 'CLEAR_JOB_OUTPUT_EVENTS';\nconst STOP_JOB_OUTPUT_SSE = 'STOP_JOB_OUTPUT_SSE';\nconst UPDATE_RPS = 'UPDATE_RPS';\nconst RESET_JOB_DETAILS = 'RESET_JOB_DETAILS';\n\n// initial state\nconst initialState = {\n  selectedJob: null,\n  archivedWorkers: [],\n  isLoadingJobDetails: false,\n  isFetchingArchivedWorkers: false,\n  jobStatusEvents: [],\n  jobOutputEvents: [],\n  hasJobStatusStarted: false,\n  hasJobOutputStarted: false,\n  currentJobOutputMessagePrettyPrinted: '',\n  rpsPrettyPrintThreshold: 50,\n  jobOutputSse: null,\n  jobStatusSse: null,\n  maxJobOutputLength: 200,\n  rps: 0,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchJobDetails]({ commit, dispatch }, { jobId }) {\n    commit(FETCH_JOB_DETAILS);\n    const { data, errors } = await fetchJobDetails(jobId);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_SELECTED_JOB, data);\n  },\n\n  async [ActionTypes.FetchArchivedWorkersForJob](\n    { commit, dispatch },\n    { jobId },\n  ) {\n    commit(FETCH_ARCHIVED_WORKERS_FOR_JOB);\n    const { data = {}, errors } = await fetchJobArchivedWorkers(jobId);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_ARCHIVED_WORKERS_FOR_JOB, data);\n  },\n\n  async [ActionTypes.ResubmitWorker]({ rootState }, { jobId, workerNumber }) {\n    const userEmail = rootState.user.email;\n    return resubmitWorker(jobId, workerNumber, userEmail);\n  },\n\n  async [ActionTypes.ScaleJobStage]({ rootState }, { jobId, stageNumber, numWorkers }) {\n    const userEmail = rootState.user.email;\n    return scaleJobStage(jobId, stageNumber, numWorkers, userEmail);\n  },\n\n  async [ActionTypes.KillJobs]({ dispatch, rootState }, { jobIds = [] }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await killJobs(jobIds, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n\n  async [ActionTypes.QuickSubmitJob]({ dispatch }, { jobConfig }) {\n    const { data, errors } = await quickSubmitJob(jobConfig);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n\n  [ActionTypes.StreamJobStatus]({ commit }, { jobId }) {\n    const onOpen = () => {\n      commit(FETCH_JOB_STATUS_EVENTS);\n    };\n\n    const onMessage = e => {\n      let record = {};\n      try {\n        record = JSON.parse(e.data);\n      } catch (e) {\n        console.debug(`StreamJobStatus: Unable to parse record ${e} as json`);\n      }\n      const item = {\n        timestamp: record ? record.status.timestamp : new Date().getTime(),\n        message: record ? record.status.message : '',\n        stageNum: record ? record.status.stageNum : 'N/A',\n        state: record ? record.status.state : 'N/A',\n      };\n      commit(SET_JOB_STATUS_EVENTS, { item });\n    };\n\n    const sse = streamJobStatus(jobId, onOpen, onMessage);\n    commit(SET_JOB_STATUS_SSE, { sse });\n  },\n\n  [ActionTypes.StreamJobOutput]({ commit }, { jobOutputUrl }) {\n    const onOpen = () => {\n      commit(FETCH_JOB_OUTPUT_EVENTS);\n    };\n\n    const onMessage = e => {\n      const item = {\n        timestamp: new Date().getTime(),\n        message: e.data,\n      };\n      commit(SET_JOB_OUTPUT_EVENTS, { item });\n      commit(UPDATE_RPS);\n      commit(SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED, { item });\n    };\n    const sse = streamJobOutput(jobOutputUrl, onOpen, onMessage);\n    commit(SET_JOB_OUTPUT_SSE, { sse });\n  },\n\n  [ActionTypes.ClearJobOutput]({ commit }) {\n    commit(CLEAR_JOB_OUTPUT_EVENTS);\n  },\n\n  [ActionTypes.StopJobOutputStream]({ commit }) {\n    commit(STOP_JOB_OUTPUT_SSE);\n  },\n\n  [ActionTypes.ResetJobDetails]({ commit }) {\n    commit(STOP_JOB_OUTPUT_SSE);\n    commit(RESET_JOB_DETAILS);\n  },\n\n  [ActionTypes.UpdateCurrentJobOutputMessagePreview]({ commit }, { item }) {\n    commit(SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED, { item });\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_JOB_DETAILS](state) {\n    state.isLoadingJobDetails = true;\n  },\n\n  [FETCH_ARCHIVED_WORKERS_FOR_JOB](state) {\n    state.isFetchingArchivedWorkers = true;\n  },\n\n  [SET_SELECTED_JOB](state, job) {\n    state.selectedJob = job;\n    state.isLoadingJobDetails = false;\n  },\n\n  [SET_ARCHIVED_WORKERS_FOR_JOB](state, { list = [] }) {\n    state.archivedWorkers = list;\n    state.isFetchingArchivedWorkers = false;\n  },\n\n  [FETCH_JOB_STATUS_EVENTS](state) {\n    state.hasJobStatusStarted = true;\n  },\n\n  [SET_JOB_STATUS_EVENTS](state, { item }) {\n    state.jobStatusEvents = [item, ...state.jobStatusEvents];\n  },\n\n  [SET_JOB_STATUS_SSE](state, { sse }) {\n    state.jobStatusSse = sse;\n  },\n\n  [FETCH_JOB_OUTPUT_EVENTS](state) {\n    state.hasJobOutputStarted = true;\n  },\n\n  [SET_JOB_OUTPUT_EVENTS](state, { item }) {\n    const events = state.jobOutputEvents;\n    const tail = ([, ...xs]) => xs;\n\n    if (events.length > state.maxJobOutputLength) {\n      state.jobOutputEvents = [item, ...tail(events)];\n    } else {\n      state.jobOutputEvents = [item, ...state.jobOutputEvents];\n    }\n  },\n\n  [SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED](state, { item }) {\n    if (state.rps !== 'Infinity' && state.rps >= state.rpsPrettyPrintThreshold) {\n      return;\n    }\n\n    try {\n      const obj = JSON.parse(item.message);\n      state.currentJobOutputMessagePrettyPrinted = JSON.stringify(obj, undefined, 2);\n    } catch (e) {\n      console.debug(`Error: Unable to pretty print job output message due to ${e}`);\n      state.currentJobOutputMessagePrettyPrinted = 'Unable to pretty print job output message.'\n    }\n  },\n\n  [UPDATE_RPS](state) {\n    const events = state.jobOutputEvents;\n    const diff = Math.abs(events[0].timestamp - events[events.length - 1].timestamp);\n    const rps = (events.length / (diff / 1000)).toFixed(2);\n    state.rps = new Number(rps);\n  },\n\n  [SET_JOB_OUTPUT_SSE](state, { sse }) {\n    state.jobOutputSse = sse;\n  },\n\n  [CLEAR_JOB_OUTPUT_EVENTS](state) {\n    state.jobOutputEvents = [];\n  },\n\n  [STOP_JOB_OUTPUT_SSE](state) {\n    const sse = state.jobOutputSse;\n    if (sse) {\n      sse.close();\n    }\n    state.rps = 0;\n    state.jobOutputSse = null;\n    state.hasJobOutputStarted = false;\n  },\n\n  [RESET_JOB_DETAILS](state) {\n    state.jobStatusSse = null;\n    state.selectedJob = null;\n    state.archivedWorkers = [];\n    state.jobStatusEvents = [];\n    state.jobOutputEvents = [];\n    state.currentJobOutputMessagePrettyPrinted = '';\n    state.rps = 0;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import { fetchJobs } from '@/services/JobsService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst SET_PAGE_SIZE = 'SET_PAGE_SIZE';\nconst SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\nconst FETCH_ALL_JOBS = 'FETCH_ALL_JOBS';\nconst SET_JOBS_LIST = 'SET_JOBS_LIST';\nconst SET_TOTAL_RESOURCES = 'SET_TOTAL_RESOURCES';\n\n// initial state\nconst initialState = {\n  list: [],\n  pageSize: 15,\n  pageNumber: 1,\n  isLoadingList: false,\n  totalResources: {\n    cpu: 0,\n    memory: 0,\n  },\n  total: 0,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchJobs](\n    { commit, state, dispatch },\n    { searchText, labelFilterText } = {},\n  ) {\n    const offset = state.pageSize * (state.pageNumber - 1);\n    commit(FETCH_ALL_JOBS);\n    const { data = {}, errors } = await fetchJobs(\n      state.pageSize,\n      offset,\n      searchText,\n      labelFilterText,\n    );\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_JOBS_LIST, data);\n    commit(SET_TOTAL_RESOURCES, data);\n  },\n\n  [ActionTypes.UpdateJobsTablePageSize]({ commit }, { size = 15 }) {\n    commit(SET_PAGE_SIZE, size);\n  },\n\n  [ActionTypes.UpdateJobsTablePageNumber]({ commit }, { pageNumber = 1 }) {\n    commit(SET_PAGE_NUMBER, pageNumber);\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_ALL_JOBS](state) {\n    state.isLoadingList = true;\n  },\n\n  [SET_PAGE_SIZE](state, size) {\n    state.pageSize = size;\n  },\n\n  [SET_PAGE_NUMBER](state, pageNumber) {\n    state.pageNumber = pageNumber;\n  },\n\n  [SET_JOBS_LIST](state, { list = [], total = 0 }) {\n    state.list = list;\n    state.total = total;\n    state.isLoadingList = false;\n  },\n\n  [SET_TOTAL_RESOURCES](state, { list = [] }) {\n    let cpu = 0;\n    let memory = 0;\n    list.forEach(item => {\n      cpu += item.totCPUs;\n      memory = item.totMemory;\n    });\n    state.totalResources = {\n      cpu,\n      memory,\n    };\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import {\n  findClientByRegion,\n  getClientsForAllRegions,\n  handleApiRequests,\n} from './BaseService';\n\nexport async function fetchJobClusters(\n  pageSize = 15,\n  offset = 0,\n  searchString = '',\n  labelFilterString = '',\n) {\n  const clients = getClientsForAllRegions();\n  let queryString = searchString\n    ? `&matching=.*${searchString}.*`\n    : '';\n  queryString += labelFilterString ? `&labels=${labelFilterString}` : '';\n\n  let requests = clients.map(({ client }) =>\n    client.get(\n      `/api/v1/jobClusters/?pageSize=${pageSize}&offset=${offset}&sortBy=name&compact=true${queryString}`,\n    ),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function fetchJobClusterDetails(clusterId) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.get(`/api/v1/jobClusters/${clusterId}`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function fetchJobsForCluster(clusterId) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.get(`/api/v1/jobClusters/${clusterId}/jobs`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function createJobCluster(jobCluster) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters`, jobCluster),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterStandard(clusterId, clusterConfig) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.put(`/api/v1/jobClusters/${clusterId}`, clusterConfig),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterQuickArtifact(clusterId, artifactConfig, userEmail) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/actions/updateArtifact`, {\n      name: clusterId,\n      user: userEmail,\n      ...artifactConfig,\n    }),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterQuickSla(clusterId, slaConfig, userEmail) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/actions/updateSla`, {\n      name: clusterId,\n      user: userEmail,\n      ...slaConfig,\n    }),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterQuickMigrationStrategy(clusterId, migrationConfig, userEmail) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/actions/updateMigrationStrategy`, {\n      name: clusterId,\n      user: userEmail,\n      ...migrationConfig,\n    }),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterQuickLabel(clusterId, labels, userEmail) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/actions/updateLabel`, {\n      name: clusterId,\n      user: userEmail,\n      labels,\n    }),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function submitJobForCluster(clusterId, jobConfig) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/jobs`, jobConfig),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function enableJobCluster(clusterId, userEmail) {\n  const { client } = findClientByRegion();\n  let request = client.post(`/api/v1/jobClusters/${clusterId}/actions/enableCluster`, {\n    user: userEmail,\n    name: clusterId,\n  });\n\n  return handleApiRequests([request]);\n}\n\nexport async function disableJobCluster(clusterId, userEmail) {\n  const { client } = findClientByRegion();\n  let request = client.post(`/api/v1/jobClusters/${clusterId}/actions/disableCluster`, {\n    user: userEmail,\n    name: clusterId,\n  });\n\n  return handleApiRequests([request]);\n}\n\nexport async function deleteJobCluster(clusterId, userEmail) {\n  const { client } = findClientByRegion();\n  let request = client.delete(`/api/v1/jobClusters/${clusterId}?user=${userEmail}`);\n\n  return handleApiRequests([request]);\n}\n","import {\n  createJobCluster,\n  deleteJobCluster,\n  disableJobCluster,\n  enableJobCluster,\n  fetchJobClusterDetails,\n  fetchJobsForCluster,\n  submitJobForCluster,\n  updateJobClusterQuickArtifact,\n  updateJobClusterQuickLabel,\n  updateJobClusterQuickMigrationStrategy,\n  updateJobClusterQuickSla,\n  updateJobClusterStandard,\n} from '@/services/JobClustersService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst FETCH_JOB_CLUSTER_DETAILS = 'FETCH_JOB_CLUSTER_DETAILS';\nconst SET_SELECTED_JOB_CLUSTER = 'SET_SELECTED_JOB_CLUSTER';\nconst FETCH_JOB_CLUSTER_JOBS = 'FETCH_JOB_CLUSTER_JOBS';\nconst SET_JOBS_FOR_SELECTED_JOB_CLUSTER = 'SET_JOBS_FOR_SELECTED_JOB_CLUSTER';\n\n// initial state\nconst initialState = {\n  selectedJobCluster: null,\n  jobsForSelectedJobCluster: [],\n  isLoadingJobClusterDetails: false,\n  isLoadingJobClusterJobs: false,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.CreateJobCluster]({ dispatch }, { jobCluster }) {\n    const { data, errors } = await createJobCluster(jobCluster);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterStandard]({ dispatch }, { clusterId, jobCluster }) {\n    const { data, errors } = await updateJobClusterStandard(clusterId, jobCluster);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterQuickArtifact]({ rootState, dispatch }, { clusterId, artifactConfig }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await updateJobClusterQuickArtifact(clusterId, artifactConfig, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterQuickSla]({ rootState, dispatch }, { clusterId, slaConfig }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await updateJobClusterQuickSla(clusterId, slaConfig, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterQuickMigrationStrategy]({ rootState, dispatch }, { clusterId, migrationConfig }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await updateJobClusterQuickMigrationStrategy(clusterId, migrationConfig, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterQuickLabel]({ rootState, dispatch }, { clusterId, labels }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await updateJobClusterQuickLabel(clusterId, labels, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.FetchJobClusterDetails](\n    { commit, dispatch },\n    { clusterId },\n  ) {\n    commit(FETCH_JOB_CLUSTER_DETAILS);\n    const { data, errors } = await fetchJobClusterDetails(clusterId);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_SELECTED_JOB_CLUSTER, data);\n  },\n  async [ActionTypes.FetchJobClusterJobs]({ commit, dispatch }, { clusterId }) {\n    commit(FETCH_JOB_CLUSTER_JOBS);\n    const { data, errors } = await fetchJobsForCluster(clusterId);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_JOBS_FOR_SELECTED_JOB_CLUSTER, data);\n  },\n  async [ActionTypes.EnableJobCluster]({ rootState }, { clusterId }) {\n    const userEmail = rootState.user.email;\n    return enableJobCluster(clusterId, userEmail);\n  },\n  async [ActionTypes.DisableJobCluster]({ rootState }, { clusterId }) {\n    const userEmail = rootState.user.email;\n    return disableJobCluster(clusterId, userEmail);\n  },\n  async [ActionTypes.DeleteJobCluster]({ rootState }, { clusterId }) {\n    const userEmail = rootState.user.email;\n    return deleteJobCluster(clusterId, userEmail);\n  },\n  async [ActionTypes.SubmitJobForCluster]({ dispatch }, { clusterId, jobConfig }) {\n    const { data, errors } = await submitJobForCluster(clusterId, jobConfig);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_JOB_CLUSTER_DETAILS](state) {\n    state.isLoadingJobClusterDetails = true;\n  },\n\n  [FETCH_JOB_CLUSTER_JOBS](state) {\n    state.isLoadingJobClusterJobs = true;\n  },\n\n  [SET_SELECTED_JOB_CLUSTER](state, jobCluster) {\n    state.selectedJobCluster = jobCluster;\n    state.isLoadingJobClusterDetails = false;\n  },\n\n  [SET_JOBS_FOR_SELECTED_JOB_CLUSTER](state, { list }) {\n    state.jobsForSelectedJobCluster = list;\n    state.isLoadingJobClusterJobs = false;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import { fetchJobClusters } from '@/services/JobClustersService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst SET_PAGE_SIZE = 'SET_PAGE_SIZE';\nconst SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\nconst FETCH_ALL_JOB_CLUSTERS = 'FETCH_ALL_JOBS';\nconst SET_JOB_CLUSTERS_LIST = 'SET_JOBS_LIST';\n\n// initial state\nconst initialState = {\n  list: [],\n  pageSize: 15,\n  pageNumber: 1,\n  isLoadingList: false,\n  total: 0,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchJobClusters](\n    { commit, state, dispatch },\n    { searchText, labelFilterText } = {},\n  ) {\n    const offset = state.pageSize * (state.pageNumber - 1);\n    commit(FETCH_ALL_JOB_CLUSTERS);\n    const { data = {}, errors } = await fetchJobClusters(\n      state.pageSize,\n      offset,\n      searchText,\n      labelFilterText,\n    );\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_JOB_CLUSTERS_LIST, data);\n  },\n\n  [ActionTypes.UpdateClusterTablePageSize]({ commit }, { size = 15 }) {\n    commit(SET_PAGE_SIZE, size);\n  },\n\n  [ActionTypes.UpdateClusterTablePageNumber]({ commit }, { pageNumber = 1 }) {\n    commit(SET_PAGE_NUMBER, pageNumber);\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_ALL_JOB_CLUSTERS](state) {\n    state.isLoadingList = true;\n  },\n\n  [SET_PAGE_SIZE](state, size) {\n    state.pageSize = size;\n  },\n\n  [SET_PAGE_NUMBER](state, pageNumber) {\n    state.pageNumber = pageNumber;\n  },\n\n  [SET_JOB_CLUSTERS_LIST](state, { list = [], total = 0 }) {\n    state.list = list;\n    state.isLoadingList = false;\n    state.total = total;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import {\n  getClientsForAllRegions,\n  getServiceResponseErrors,\n} from './BaseService';\nimport pSettle from 'p-settle';\n\nexport async function fetchMasterConfigs() {\n  const clients = getClientsForAllRegions();\n\n  let requests = clients.map(({ client }) =>\n    client.get('/api/v1/masterConfigs'),\n  );\n\n  let responses = await pSettle(requests);\n  const dataReponses = responses.map(response => {\n    if (response.isFulfilled) {\n      return { data: response.value.data };\n    }\n    return { errors: getServiceResponseErrors(response.reason.response) };\n  });\n  return dataReponses[0];\n}\n","import { ActionTypes } from '@/store/actions';\nimport { fetchMasterConfigs } from '@/services/MasterService';\nimport { setMantisMasters, setMesosUrl } from '@/utils/local-storage';\n\n// mutation types\nconst SET_MANTIS_MASTERS = 'SET_MANTIS_MASTERS';\nconst ADD_GLOBAL_ERRORS = 'ADD_GLOBAL_ERROR';\nconst SET_MESOS_URL = 'SET_MESOS_URL';\nconst SET_MANTIS_MASTER_CONFIGS = 'SET_MANTIS_MASTER_CONFIGS';\n\n// initial state\nconst initialState = {\n  mantisMasters: [],\n  globalErrors: [],\n  mesosUrl: '',\n  masterConfigs: [],\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  [ActionTypes.SetMantisMasters]({ commit }, mantisMasters = []) {\n    setMantisMasters(mantisMasters);\n    commit(SET_MANTIS_MASTERS, mantisMasters);\n  },\n  [ActionTypes.SetMesosUrl]({ commit }, mesosUrl) {\n    setMesosUrl(mesosUrl);\n    commit(SET_MESOS_URL, mesosUrl);\n  },\n  [ActionTypes.AddGlobalErrors]({ commit }, errors = []) {\n    commit(ADD_GLOBAL_ERRORS, errors);\n  },\n  async [ActionTypes.FetchMasterConfigs]({ commit, dispatch }) {\n    const { data = {}, errors } = await fetchMasterConfigs();\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_MANTIS_MASTER_CONFIGS, data);\n  },\n};\n\n// mutations\nconst mutations = {\n  [SET_MANTIS_MASTERS](state, mantisMasters) {\n    state.mantisMasters = mantisMasters;\n  },\n  [ADD_GLOBAL_ERRORS](state, errors) {\n    state.globalErrors = [...state.globalErrors, ...errors];\n  },\n  [SET_MESOS_URL](state, mesosUrl) {\n    state.mesosUrl = mesosUrl;\n  },\n  [SET_MANTIS_MASTER_CONFIGS](state, list) {\n    state.masterConfigs = list;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import {\n  findClientByRegion,\n  handleApiRequests,\n} from './BaseService';\n\nexport async function fetchArtifactNames() {\n  const { client } = findClientByRegion();\n\n  const request = client.get(\n    `/api/v1/artifacts`,\n  );\n\n  return handleApiRequests([request]);\n}\n\nexport async function fetchArtifactProperties(artifactLocation) {\n  const { client } = findClientByRegion();\n  const artifactName = artifactLocation.split(\"/\").pop().replace(/\\.(jar|zip)$/, '.json');\n\n  const request = client.get(\n    `/api/v1/artifacts/${artifactName}`,\n  );\n\n  return handleApiRequests([request]);\n}\n\nexport async function uploadArtifact(file) {\n  const { client } = findClientByRegion();\n\n  const formData = new FormData();\n  formData.append('file', file);\n\n  const request = client.post(\n    `/api/v1/artifacts`,\n    formData,\n  )\n\n  return handleApiRequests([request]);\n}\n","import {\n  fetchArtifactProperties,\n  uploadArtifact,\n} from '@/services/ArtifactService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst FETCH_ARTIFACT_JSON = 'FETCH_ARTIFACT_JSON';\nconst SET_SELECTED_ARTIFACT = 'SET_SELECTED_ARTIFACT';\nconst SET_SELECTED_ARTIFACT_PROPERTIES = 'SET_SELECTED_ARTIFACT_PROPERTIES';\n\n// initial state\nconst initialState = {\n  selectedArtifact: null,\n  isLoadingArtifactProperties: false,\n  selectedArtifactPropertiesJson: null,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchJobArtifact]({ commit, dispatch }, { artifactName }) {\n    commit(FETCH_ARTIFACT_JSON);\n    const { data, errors } = await fetchArtifactProperties(artifactName);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_SELECTED_ARTIFACT_PROPERTIES, data);\n    commit(SET_SELECTED_ARTIFACT, { artifactName });\n  },\n  async [ActionTypes.UploadArtifact]({}, { file }) {\n    const { data, errors } = await uploadArtifact(file);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return data;\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_ARTIFACT_JSON](state) {\n    state.isLoadingArtifactProperties = true;\n  },\n  [SET_SELECTED_ARTIFACT](state, { artifactName }) {\n    state.selectedArtifact = artifactName;\n  },\n  [SET_SELECTED_ARTIFACT_PROPERTIES](state, artifactPropertiesJson) {\n    state.selectedArtifactPropertiesJson = artifactPropertiesJson;\n    state.isLoadingArtifactProperties = false;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import { ActionTypes } from '@/store/actions';\nimport { fetchArtifactNames  } from '@/services/ArtifactService';\n\n// mutation types\nconst FETCH_ARTIFACTS_LIST = 'FETCH_ARTIFACTS_LIST';\nconst SET_ARTIFACTS_LIST = 'SET_ARTIFACTS_LIST';\n\n// initial state\nconst initialState = {\n  isLoadingArtifactsList: false,\n  artifactNames: [],\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchArtifacts]({ commit, dispatch }) {\n    commit(FETCH_ARTIFACTS_LIST);\n    const { data, errors } = await fetchArtifactNames();\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_ARTIFACTS_LIST, data);\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_ARTIFACTS_LIST](state) {\n    state.isLoadingArtifactsList = true;\n  },\n  [SET_ARTIFACTS_LIST](state, list = []) {\n    state.artifactNames = list;\n    state.isLoadingArtifactsList = false;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport user from '@/store/modules/User';\nimport job from '@/store/modules/Job';\nimport jobs from '@/store/modules/Jobs';\nimport jobCluster from '@/store/modules/JobCluster';\nimport jobClusters from '@/store/modules/JobClusters';\nimport metadata from '@/store/modules/Metadata';\nimport artifact from '@/store/modules/Artifact';\nimport artifacts from '@/store/modules/Artifacts';\n\nVue.use(Vuex);\nconst isDebug = process.env.NODE_ENV !== 'production';\n\nexport default new Vuex.Store({\n  modules: {\n    user,\n    job,\n    jobs,\n    jobCluster,\n    jobClusters,\n    metadata,\n    artifact,\n    artifacts,\n  },\n  strict: isDebug,\n});\n","import axios from 'axios';\nimport store from '@/store';\nimport pSettle from 'p-settle';\n\nexport function getClientsForAllRegions() {\n  const masters = store.state.metadata.mantisMasters;\n  return masters.map(master => ({\n    name: master.name,\n    client: axios.create({\n      baseURL: master.url,\n    }),\n  }));\n}\n\n// For now only single region is supported, we will only use first mantis master.\nexport function findClientByRegion() {\n  const master = store.state.metadata.mantisMasters[0];\n  return {\n    name: master.name,\n    client: axios.create({\n      baseURL: master.url,\n    }),\n  };\n}\n\n// For now only single region is supported, we will only use first mantis master.\nexport function findMantisApiUrlByRegion() {\n  const master = store.state.metadata.mantisMasters[0];\n  return master.url;\n}\n\nexport async function handleApiRequests(requests) {\n  let responses = await pSettle(requests);\n  const dataReponses = responses.map(response => {\n    if (response.isFulfilled) {\n      return { data: response.value.data };\n    }\n    return { errors: getServiceResponseErrors(response.reason.response) };\n  });\n  return dataReponses[0];\n}\n\nexport function getServiceResponseErrors(response) {\n  if (response && response.status === 404) {\n    return [\n      {\n        code: 1,\n        message: `The requested resource (${\n          response.request.responseURL\n        }) could not be found.`,\n      },\n    ];\n  } else if (response && response.data) {\n    return [response.data];\n  }\n  return [{ code: 2, message: 'Request failed with an unexpected error.' }];\n}\n\nexport function createSseEventSource(url, onOpen, onMessage, onError) {\n  const eventSource = new EventSource(url);\n  eventSource.onopen = onOpen;\n  eventSource.onmessage = onMessage;\n  eventSource.onerror = onError;\n  return eventSource;\n}\n\nexport function createWebsocket(url, onOpen, onMessage, onError, onClose) {\n  const connection = new WebSocket(url);\n  connection.onopen = onOpen;\n  connection.onmessage = onMessage;\n  connection.onerror = onError;\n  connection.onclose = onClose;\n  return connection;\n}\n","import Vue from 'vue';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faAngleLeft,\n  faArrowDown,\n  faArrowsAltH,\n  faBolt,\n  faClipboard,\n  faClock,\n  faCog,\n  faRocket,\n  faSitemap,\n  faSlidersH,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\nexport default () => {\n  library.add(\n    faRocket,\n    faSitemap,\n    faClock,\n    faBolt,\n    faCog,\n    faArrowsAltH,\n    faArrowDown,\n    faAngleLeft,\n    faClipboard,\n    faSlidersH,\n  );\n  Vue.component('font-awesome-icon', FontAwesomeIcon);\n}\n\n","import Vue from 'vue';\nimport {\n  Loading,\n  Message,\n  MessageBox,\n} from 'element-ui';\nimport lang from 'element-ui/lib/locale/lang/en';\nimport locale from 'element-ui/lib/locale';\nimport 'element-ui/lib/theme-chalk/index.css';\n\nexport default () => {\n  Vue.use(Loading.directive);\n  locale.use(lang);\n\n  Vue.prototype.$ELEMENT = {\n    size: 'small',\n    zIndex: 2000,\n  };\n  Vue.prototype.$loading = Loading.service;\n  Vue.prototype.$confirm = MessageBox.confirm;\n  Vue.prototype.$message = Message;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":_vm.$style.app}},[_c('el-container',{attrs:{\"direction\":\"vertical\"}},[(_vm.loggedIn)?_c('TopNav',{staticClass:\"stretch-x\",attrs:{\"user-name\":_vm.userName},on:{\"on-click-logout\":_vm.logout}}):_vm._e(),_c('el-main',[_vm._l((_vm.errorMessages),function(message){return _c('el-alert',{key:message,class:_vm.$style['error-alert'],attrs:{\"title\":message,\"type\":\"error\"}})}),_c('router-view')],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-menu',{staticClass:\"top-nav\",attrs:{\"default-active\":_vm.activeLink,\"mode\":\"horizontal\",\"background-color\":_vm.backgroundColor,\"text-color\":_vm.textColor,\"active-text-color\":_vm.activeTextColor,\"unique-opened\":\"\",\"router\":\"\"}},[_c('el-menu-item',{attrs:{\"index\":\"/\"}},[_c('h1',[_vm._v(\"Mantis\")])]),_c('el-menu-item',{attrs:{\"index\":\"/clusters\"}},[_c('template',{slot:\"title\"},[_vm._v(\"\\n      Clusters\\n    \")])],2),_c('el-menu-item',{attrs:{\"index\":\"/jobs\"}},[_c('template',{slot:\"title\"},[_vm._v(\"\\n      Jobs\\n    \")])],2),_c('el-menu-item',{attrs:{\"index\":\"/help\"}},[_c('template',{slot:\"title\"},[_vm._v(\"\\n      Help\\n    \")])],2),_c('el-submenu',{class:_vm.$style['user-controls'],attrs:{\"index\":\"/settings\"}},[_c('template',{slot:\"title\"},[_vm._v(\"\\n      \"+_vm._s(_vm.userName)+\"\\n    \")]),_c('el-menu-item',{on:{\"click\":_vm.handleLogout}},[_vm._v(\"\\n      Logout\\n    \")])],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-menu\n    :default-active=\"activeLink\"\n    class=\"top-nav\"\n    mode=\"horizontal\"\n    :background-color=\"backgroundColor\"\n    :text-color=\"textColor\"\n    :active-text-color=\"activeTextColor\"\n    unique-opened\n    router\n  >\n    <el-menu-item index=\"/\">\n      <h1>Mantis</h1>\n    </el-menu-item>\n\n    <el-menu-item index=\"/clusters\">\n      <template slot=\"title\">\n        Clusters\n      </template>\n    </el-menu-item>\n\n    <el-menu-item index=\"/jobs\">\n      <template slot=\"title\">\n        Jobs\n      </template>\n    </el-menu-item>\n\n    <el-menu-item index=\"/help\">\n      <template slot=\"title\">\n        Help\n      </template>\n    </el-menu-item>\n\n    <el-submenu :class=\"$style['user-controls']\" index=\"/settings\">\n      <template slot=\"title\">\n        {{ userName }}\n      </template>\n      <el-menu-item @click=\"handleLogout\">\n        Logout\n      </el-menu-item>\n    </el-submenu>\n  </el-menu>\n</template>\n\n<script>\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { Menu, MenuItem, Submenu } from 'element-ui';\n\nexport default {\n  name: 'TopNav',\n\n  components: {\n    [Menu.name]: Menu,\n    [MenuItem.name]: MenuItem,\n    [Submenu.name]: Submenu,\n  },\n\n  props: {\n    userName: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      faBars,\n      backgroundColor: '#800000',\n      textColor: 'white',\n      activeTextColor: getComputedStyle(\n        document.documentElement,\n      ).getPropertyValue('--yellow-500'),\n    };\n  },\n\n  computed: {\n    activeLink: function() {\n      return `/${this.$route.path.split('/')[1]}`;\n    },\n  },\n\n  methods: {\n    handleLogout() {\n      this.$emit('on-click-logout');\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" module>\n.user-controls {\n  float: right !important;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNav.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNav.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TopNav.vue?vue&type=template&id=5041ec45&\"\nimport script from \"./TopNav.vue?vue&type=script&lang=js&\"\nexport * from \"./TopNav.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TopNav.vue?vue&type=style&index=0&lang=scss&module=true&\"\n\n\n\n\nfunction injectStyles (context) {\n  \n  this[\"$style\"] = (style0.locals || style0)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div :id=\"$style.app\">\n    <el-container direction=\"vertical\">\n      <TopNav v-if=\"loggedIn\" class=\"stretch-x\" :user-name=\"userName\" @on-click-logout=\"logout\" />\n      <el-main>\n        <el-alert\n          v-for=\"message in errorMessages\"\n          :key=\"message\"\n          :class=\"$style['error-alert']\"\n          :title=\"message\"\n          type=\"error\"\n        />\n        <router-view />\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport {\n  Alert,\n  Container,\n  Main,\n} from 'element-ui';\nimport Vue from 'vue';\nimport store from '@/store';\nimport TopNav from '@/components/TopNav.vue';\nimport { ActionTypes } from '@/store/actions';\nimport { mapGetters, mapState } from 'vuex';\n\nexport default Vue.extend({\n  name: 'App',\n\n  components: {\n    [Container.name]: Container,\n    [Main.name]: Main,\n    [Alert.name]: Alert,\n    TopNav,\n  },\n\n  computed: {\n    ...mapState({\n      userName: state => state.user.name,\n      errorMessages: state => {\n        return new Set(\n          state.metadata.globalErrors.map(\n            error => error.message || error.error || error,\n          ),\n        );\n      },\n    }),\n    ...mapGetters(['loggedIn']),\n  },\n\n  methods: {\n    logout() {\n      store.dispatch(ActionTypes.LogoutUser);\n      store.dispatch(ActionTypes.SetMantisMasters, []);\n      this.$router.push('/login');\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\" module>\n#app {\n  display: flex;\n  font-family: 'Source Code Pro', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n\n.error-alert {\n  margin: 0.25em;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=88d281ce&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&module=true&\"\n\n\n\n\nfunction injectStyles (context) {\n  \n  this[\"$style\"] = (style0.locals || style0)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  \n)\n\nexport default component.exports","import store from '@/store';\n\nexport default function(to, _from, next) {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!store.getters.loggedIn) {\n      next('/login');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n}\n","export default function(to, _from, _next) {\n  const nearestRouteWithTitle = to.matched\n    .slice()\n    .reverse()\n    .find(r => r.meta && r.meta.title);\n  if (nearestRouteWithTitle) {\n    document.title = nearestRouteWithTitle.meta.title;\n  }\n}\n","import Vue from 'vue';\nimport Router from 'vue-router';\nimport { auth, pageTitle } from '@/middleware';\n\nVue.use(Router);\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      redirect: { name: 'clusters' },\n    },\n    {\n      path: '/login',\n      name: 'login',\n      meta: { title: 'Mantis - Login' },\n      component: () =>\n        import(/* webpackChunkName: \"login\" */ '@/pages/LoginPage.vue'),\n    },\n    {\n      path: '/jobs',\n      name: 'jobs',\n      meta: { requiresAuth: true, title: 'Mantis - Jobs' },\n      component: () =>\n        import(/* webpackChunkName: \"jobs\" */ '@/pages/JobsPage.vue'),\n    },\n    {\n      path: '/jobs/:jobId',\n      name: 'jobDetail',\n      meta: { requiresAuth: true, title: 'Mantis - Job Detail' },\n      component: () =>\n        import(/* webpackChunkName: 'jobs' */ '@/pages/JobDetailPage.vue'),\n    },\n    {\n      path: '/clusters',\n      name: 'clusters',\n      meta: { requiresAuth: true, title: 'Mantis - Clusters' },\n      component: () =>\n        import(/* webpackChunkName: \"clusters\" */ '@/pages/JobClustersPage.vue'),\n    },\n    {\n      path: '/clusters/create',\n      name: 'clusterCreatePage',\n      meta: { requiresAuth: true, title: 'Mantis - Create Cluster' },\n      component: () =>\n        import(\n          /* webpackChunkName: \"clusters\" */ '@/pages/JobClusterCreatePage.vue'\n        ),\n    },\n    {\n      path: '/clusters/:clusterId',\n      name: 'clusterDetail',\n      meta: { requiresAuth: true, title: 'Mantis - Cluster Detail' },\n      component: () =>\n        import(\n          /* webpackChunkName: \"clusters\" */ '@/pages/JobClusterDetailPage.vue'\n        ),\n    },\n    {\n      path: '/clusters/:clusterId/update',\n      name: 'clusterUpdate',\n      meta: { requiresAuth: true, title: 'Mantis - Cluster Update' },\n      component: () =>\n        import(\n          /* webpackChunkName: \"clusters\" */ '@/pages/JobClusterUpdatePage.vue'\n        ),\n    },\n    {\n      path: '/clusters/:clusterId/submit',\n      name: 'clusterJobSubmit',\n      meta: { requiresAuth: true, title: 'Mantis - Job Cluster Submit Job' },\n      component: () =>\n        import(\n          /* webpackChunkName: \"clusters\" */ '@/pages/JobClusterSubmitJobPage.vue'\n        ),\n    },\n    {\n      path: '/summary',\n      name: 'summary',\n      meta: { requiresAuth: true, title: 'Mantis - Summary' },\n      component: () =>\n        import(/* webpackChunkName: \"summary\" */ '@/pages/SummaryPage.vue'),\n    },\n    {\n      path: '/admin',\n      name: 'admin',\n      meta: { requiresAuth: true, title: 'Mantis - Admin' },\n      component: () =>\n        import(/* webpackChunkName: \"admin\" */ '@/pages/AdminPage.vue'),\n    },\n    {\n      path: '/help',\n      name: 'help',\n      meta: { requiresAuth: false, title: 'Mantis - Help' },\n      component: () =>\n        import(/* webpackChunkName: \"help\" */ '@/pages/HelpPage.vue'),\n    },\n    {\n      path: '/404',\n      name: '404',\n      component: () =>\n        import(/* webpackChunkName: \"404\" */ '@/pages/NotFoundPage.vue'),\n    },\n    {\n      path: '*',\n      redirect: { name: '404' },\n    },\n  ],\n  scrollBehavior(_to, _from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition\n    } else {\n      return { x: 0, y: 0 }\n    }\n  },\n});\n\nrouter.beforeEach((to, from, next) => {\n  auth(to, from, next);\n  pageTitle(to, from, next);\n});\n\nexport default router;\n","import Vue from 'vue';\nimport VueScrollTo from 'vue-scrollto';\nimport VueClipboard from 'vue-clipboard2';\nimport pluginFontAwesome from '@/plugins/font-awesome';\nimport pluginElementUi from '@/plugins/element-ui';\nimport App from '@/App.vue';\nimport router from '@/router';\nimport store from '@/store';\nimport { ActionTypes } from '@/store/actions';\nimport '@/assets/index.scss';\nimport {\n  getMantisMasters,\n  getMesosUrl,\n  getUserEmail,\n  getUserName,\n} from '@/utils/local-storage';\n\nVue.config.productionTip = false;\n\n// Add Plugins\npluginFontAwesome();\npluginElementUi();\nVue.use(VueScrollTo, {\n  container: 'body',\n});\nVue.use(VueClipboard);\n\n(function initializeApp() {\n  const userInfo = {\n    name: getUserName(),\n    email: getUserEmail(),\n  };\n  store.dispatch(ActionTypes.LoginUser, userInfo);\n  store.dispatch(ActionTypes.SetMantisMasters, getMantisMasters());\n  store.dispatch(ActionTypes.SetMesosUrl, getMesosUrl());\n})();\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App),\n}).$mount('#app');\n","export const ActionTypes = {\n  LoginUser: 'LoginUser',\n  LogoutUser: 'LogoutUser',\n  AddGlobalErrors: 'AddGlobalErrors',\n  SetMantisMasters: 'SetMantisMasters',\n  FetchMasterConfigs: 'FetchMasterConfigs',\n  SetMesosUrl: 'SetMesosUrl',\n  FetchJobs: 'FetchJobs',\n  UpdateJobsTablePageSize: 'UpdateJobsTablePageSize',\n  UpdateJobsTablePageNumber: 'UpdateJobsTablePageNumber',\n  FetchJobDetails: 'FetchJobDetails',\n  CreateJobCluster: 'CreateJobCluster',\n  FetchJobClusters: 'FetchJobClusters',\n  FetchArchivedWorkersForJob: 'FetchArchivedWorkersForJob',\n  StreamJobStatus: 'StreamJobStatus',\n  StreamJobOutput: 'StreamJobOutput',\n  ClearJobOutput: 'ClearJobOutput',\n  UpdateCurrentJobOutputMessagePreview: 'UpdateCurrentJobOutputMessagePreview',\n  StopJobOutputStream: 'StopJobOutputStream',\n  KillJobs: 'KillJobs',\n  ResubmitWorker: 'ResubmitWorker',\n  ScaleJobStage: 'ScaleJobStage',\n  ResetJobDetails: 'ResetJobDetails',\n  UpdateClusterTablePageSize: 'UpdateClusterTablePageSize',\n  UpdateClusterTablePageNumber: 'UpdateClusterTablePageNumber',\n  FetchJobClusterDetails: 'FetchJobClusterDetails',\n  FetchJobClusterJobs: 'FetchJobClusterJobs',\n  EnableJobCluster: 'EnableJobCluster',\n  DisableJobCluster: 'DisableJobCluster',\n  DeleteJobCluster: 'DeleteJobCluster',\n  UpdateClusterForm: 'UpdateClusterForm',\n  SubmitJobForCluster: 'SubmitJobForCluster',\n  QuickSubmitJob: 'QuickSubmitJob',\n  FetchLatestJobForCluster: 'FetchLatestJobForCluster',\n  FetchArtifacts: 'FetchArtifacts',\n  FetchJobArtifact: 'FetchJobArtifact',\n  UploadArtifact: 'UploadArtifact',\n  UpdateJobClusterStandard: 'UpdateJobClusterStandard',\n  UpdateJobClusterQuickArtifact: 'UpdateJobClusterQuickArtifact',\n  UpdateJobClusterQuickSla: 'UpdateJobClusterQuickSla',\n  UpdateJobClusterQuickMigrationStrategy: 'UpdateJobClusterQuickMigrationStrategy',\n  UpdateJobClusterQuickLabel: 'UpdateJobClusterQuickLabel',\n};\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-0-0!../node_modules/css-loader/index.js??ref--8-oneOf-0-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-0-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-0-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&module=true&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-0-0!../node_modules/css-loader/index.js??ref--8-oneOf-0-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-0-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-0-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&module=true&\"","import {\n  createSseEventSource,\n  findClientByRegion,\n  findMantisApiUrlByRegion,\n  getClientsForAllRegions,\n  handleApiRequests,\n} from './BaseService';\n\nconst reason = 'Mantis UI user action';\n\nexport async function fetchJobs(pageSize = 15, offset = 0, searchString = '', labelFilterString = '') {\n  const clients = getClientsForAllRegions();\n  let queryString = searchString\n    ? `&matching=.*${searchString}.*`\n    : '';\n  queryString += labelFilterString ? `&labels=${labelFilterString}` : '';\n\n  const requests = clients.map(({ client }) =>\n    client.get(\n      `/api/v1/jobs/?pageSize=${pageSize}&offset=${offset}&compact=true${queryString}`,\n    ),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function fetchJobDetails(jobId) {\n  const clients = getClientsForAllRegions();\n  const requests = clients.map(({ client }) =>\n    client.get(`/api/v1/jobs/${jobId}`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function fetchJobArchivedWorkers(jobId) {\n  const clients = getClientsForAllRegions();\n  const requests = clients.map(({ client }) =>\n    client.get(`/api/v1/jobs/${jobId}/archivedWorkers`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function resubmitWorker(jobId, workerNumber, userEmail) {\n  const { client } = findClientByRegion();\n  const request = client.post(`/api/v1/jobs/${jobId}/actions/resubmitWorker`, {\n    user: userEmail,\n    workerNumber,\n    reason,\n  });\n\n  return handleApiRequests([request]);\n}\n\nexport async function scaleJobStage(jobId, stageNumber, numWorkers, userEmail) {\n  const { client } = findClientByRegion();\n  const request = client.post(`/api/v1/jobs/${jobId}/actions/scaleStage`, {\n    JobId: jobId,\n    StageNumber: stageNumber,\n    NumWorkers: numWorkers,\n    user: userEmail,\n  });\n\n  return handleApiRequests([request]);\n}\n\nexport async function killJobs(jobIds, userEmail) {\n  const { client } = findClientByRegion();\n  const requests = jobIds.map(jobId =>\n    client.delete(`/api/v1/jobs/${jobId}?user=${userEmail}&reason=${reason}`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function streamJobStatus(jobId, onOpen, onMessage, onError) {\n  const mantisBaseUrl = findMantisApiUrlByRegion();\n  const url = `${mantisBaseUrl}/api/v1/jobstatus/${jobId}`;\n  return createSseEventSource(url, onOpen, onMessage, onError);\n}\n\nexport async function quickSubmitJob(jobConfig) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobs/actions/quickSubmit`, jobConfig),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport function streamingOutputUrl(jobId, samplingRate) {\n  const mantisBaseUrl = findMantisApiUrlByRegion();\n  const queryParamString = samplingRate ? `?sampleMSec=${samplingRate}` : '';\n  return `${mantisBaseUrl}/api/v1/jobconnectbyid/${jobId}${queryParamString}`;\n}\n\nexport function streamJobOutput(\n  jobOutputUrl,\n  onOpen,\n  onMessage,\n  onError,\n) {\n  return createSseEventSource(jobOutputUrl, onOpen, onMessage, onError);\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-0-0!../../node_modules/css-loader/index.js??ref--8-oneOf-0-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-0-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-0-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNav.vue?vue&type=style&index=0&lang=scss&module=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-0-0!../../node_modules/css-loader/index.js??ref--8-oneOf-0-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-0-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-0-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNav.vue?vue&type=style&index=0&lang=scss&module=true&\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app_3cl75\",\"error-alert\":\"App_error-alert_3ss0U\"};"],"sourceRoot":""}