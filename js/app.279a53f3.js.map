{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?3ef1","webpack:///./src/utils/local-storage.js","webpack:///./src/utils/string.js","webpack:///./src/store/modules/User.js","webpack:///./src/store/modules/Job.js","webpack:///./src/store/modules/Jobs.js","webpack:///./src/services/JobClustersService.js","webpack:///./src/store/modules/JobCluster.js","webpack:///./src/store/modules/JobClusters.js","webpack:///./src/services/MasterService.js","webpack:///./src/store/modules/Metadata.js","webpack:///./src/services/ArtifactService.js","webpack:///./src/store/modules/Artifact.js","webpack:///./src/store/modules/Artifacts.js","webpack:///./src/store/index.js","webpack:///./src/services/BaseService.js","webpack:///./src/plugins/font-awesome.js","webpack:///./src/plugins/element-ui.js","webpack:///./src/App.vue?3b06","webpack:///./src/components/TopNav.vue?8e01","webpack:///src/components/TopNav.vue","webpack:///./src/components/TopNav.vue?4919","webpack:///./src/components/TopNav.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a37b","webpack:///./src/App.vue","webpack:///./src/middleware/auth.js","webpack:///./src/middleware/page-title.js","webpack:///./src/router.js","webpack:///./src/main.js","webpack:///./src/store/actions.js","webpack:///./src/App.vue?e572","webpack:///./src/services/JobsService.js","webpack:///./src/components/TopNav.vue?d29d","webpack:///./src/components/TopNav.vue?1ccc"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","USER_NAME_KEY","USER_EMAIL_KEY","MANTIS_MASTERS_KEY","MESOS_URL_KEY","getUserName","localStorage","getItem","getUserEmail","getMantisMasters","mastersString","JSON","parse","getMesosUrl","setUserName","userName","setItem","setUserEmail","userEmail","setMantisMasters","masters","stringify","setMesosUrl","mesosUrl","isEmpty","str","LOGIN_USER","LOGOUT_USER","initialState","email","getters","loggedIn","state","actions","ActionTypes","LoginUser","commit","LogoutUser","mutations","FETCH_JOB_DETAILS","FETCH_ARCHIVED_WORKERS_FOR_JOB","FETCH_JOB_OUTPUT_EVENTS","FETCH_JOB_STATUS_EVENTS","SET_SELECTED_JOB","SET_ARCHIVED_WORKERS_FOR_JOB","SET_JOB_STATUS_EVENTS","SET_JOB_STATUS_SSE","SET_JOB_OUTPUT_EVENTS","SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED","SET_JOB_OUTPUT_SSE","CLEAR_JOB_OUTPUT_EVENTS","STOP_JOB_OUTPUT_SSE","UPDATE_RPS","RESET_JOB_DETAILS","selectedJob","archivedWorkers","isLoadingJobDetails","isFetchingArchivedWorkers","jobStatusEvents","jobOutputEvents","hasJobStatusStarted","hasJobOutputStarted","currentJobOutputMessagePrettyPrinted","rpsPrettyPrintThreshold","jobOutputSse","jobStatusSse","maxJobOutputLength","rps","FetchJobDetails","dispatch","jobId","errors","fetchJobDetails","AddGlobalErrors","FetchArchivedWorkersForJob","fetchJobArchivedWorkers","ResubmitWorker","rootState","workerNumber","user","resubmitWorker","ScaleJobStage","stageNumber","numWorkers","scaleJobStage","KillJobs","jobIds","killJobs","QuickSubmitJob","jobConfig","quickSubmitJob","StreamJobStatus","onOpen","onMessage","record","debug","item","timestamp","status","Date","getTime","stageNum","sse","streamJobStatus","StreamJobOutput","jobOutputUrl","streamJobOutput","ClearJobOutput","StopJobOutputStream","ResetJobDetails","UpdateCurrentJobOutputMessagePreview","job","list","events","tail","xs","obj","diff","Math","abs","toFixed","Number","close","SET_PAGE_SIZE","SET_PAGE_NUMBER","FETCH_ALL_JOBS","SET_JOBS_LIST","SET_TOTAL_RESOURCES","pageSize","pageNumber","isLoadingList","totalResources","cpu","memory","total","FetchJobs","searchText","labelFilterText","offset","fetchJobs","UpdateJobsTablePageSize","size","UpdateJobsTablePageNumber","forEach","totCPUs","totMemory","async","fetchJobClusters","searchString","labelFilterString","clients","getClientsForAllRegions","queryString","requests","map","client","handleApiRequests","fetchJobClusterDetails","clusterId","fetchJobsForCluster","createJobCluster","jobCluster","post","updateJobClusterStandard","clusterConfig","put","updateJobClusterQuickArtifact","artifactConfig","updateJobClusterQuickSla","slaConfig","updateJobClusterQuickMigrationStrategy","migrationConfig","updateJobClusterQuickLabel","labels","submitJobForCluster","enableJobCluster","findClientByRegion","disableJobCluster","deleteJobCluster","delete","FETCH_JOB_CLUSTER_DETAILS","SET_SELECTED_JOB_CLUSTER","FETCH_JOB_CLUSTER_JOBS","SET_JOBS_FOR_SELECTED_JOB_CLUSTER","selectedJobCluster","jobsForSelectedJobCluster","isLoadingJobClusterDetails","isLoadingJobClusterJobs","CreateJobCluster","UpdateJobClusterStandard","UpdateJobClusterQuickArtifact","UpdateJobClusterQuickSla","UpdateJobClusterQuickMigrationStrategy","UpdateJobClusterQuickLabel","FetchJobClusterDetails","FetchJobClusterJobs","EnableJobCluster","DisableJobCluster","DeleteJobCluster","SubmitJobForCluster","FETCH_ALL_JOB_CLUSTERS","SET_JOB_CLUSTERS_LIST","FetchJobClusters","UpdateClusterTablePageSize","UpdateClusterTablePageNumber","fetchMasterConfigs","responses","pSettle","dataReponses","response","isFulfilled","getServiceResponseErrors","reason","SET_MANTIS_MASTERS","ADD_GLOBAL_ERRORS","SET_MESOS_URL","SET_MANTIS_MASTER_CONFIGS","mantisMasters","globalErrors","masterConfigs","SetMantisMasters","SetMesosUrl","FetchMasterConfigs","fetchArtifactNames","fetchArtifactProperties","artifactLocation","artifactName","split","pop","replace","uploadArtifact","file","formData","FormData","append","FETCH_ARTIFACT_JSON","SET_SELECTED_ARTIFACT","SET_SELECTED_ARTIFACT_PROPERTIES","selectedArtifact","isLoadingArtifactProperties","selectedArtifactPropertiesJson","FetchJobArtifact","UploadArtifact","artifactPropertiesJson","FETCH_ARTIFACTS_LIST","SET_ARTIFACTS_LIST","isLoadingArtifactsList","artifactNames","FetchArtifacts","Vue","use","Vuex","isDebug","process","Store","jobs","jobClusters","metadata","artifact","artifacts","strict","store","master","axios","baseURL","url","findMantisApiUrlByRegion","responseURL","createSseEventSource","onError","eventSource","EventSource","onopen","onmessage","library","add","faRocket","faSitemap","faClock","faBolt","faCog","faArrowsAltH","faArrowDown","faAngleLeft","faClipboard","faSlidersH","component","FontAwesomeIcon","directive","locale","lang","$ELEMENT","zIndex","$loading","service","$confirm","confirm","$message","render","_vm","this","_h","$createElement","_c","_self","attrs","$style","app","staticClass","on","logout","_e","_l","class","staticRenderFns","activeLink","backgroundColor","textColor","activeTextColor","_v","slot","_s","handleLogout","components","props","String","required","faBars","getComputedStyle","computed","$route","path","methods","$emit","injectStyles","context","locals","TopNav","errorMessages","Set","$router","to","_from","next","matched","some","meta","requiresAuth","_next","nearestRouteWithTitle","reverse","find","title","Router","router","base","routes","redirect","scrollBehavior","_to","savedPosition","x","y","beforeEach","from","auth","pageTitle","config","productionTip","pluginFontAwesome","pluginElementUi","VueScrollTo","container","VueClipboard","userInfo","h","App","$mount","UpdateClusterForm","FetchLatestJobForCluster","JobId","StageNumber","NumWorkers","mantisBaseUrl","streamingOutputUrl","samplingRate","queryParamString"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAGnBC,EAAqB,CACxB,IAAO,GAMJjB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASa,EAAe7B,GACvB,OAAOyB,EAAoBK,EAAI,OAAS,CAAC,IAAM,MAAM,MAAQ,QAAQ,gBAAgB,gBAAgB,iBAAiB,iBAAiB,SAAW,WAAW,KAAO,OAAO,MAAQ,QAAQ,KAAO,OAAO,QAAU,WAAW9B,IAAUA,GAAW,IAAM,CAAC,IAAM,WAAW,MAAQ,WAAW,gBAAgB,WAAW,iBAAiB,WAAW,SAAW,WAAW,KAAO,WAAW,MAAQ,WAAW,KAAO,WAAW,QAAU,YAAYA,GAAW,MAIpc,SAASyB,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAUgC,QAGnC,IAAIC,EAASL,EAAiB5B,GAAY,CACzCK,EAAGL,EACHkC,GAAG,EACHF,QAAS,IAUV,OANAlB,EAAQd,GAAUW,KAAKsB,EAAOD,QAASC,EAAQA,EAAOD,QAASN,GAG/DO,EAAOC,GAAI,EAGJD,EAAOD,QAKfN,EAAoBS,EAAI,SAAuBlC,GAC9C,IAAImC,EAAW,GAIXC,EAAY,CAAC,gBAAgB,EAAE,SAAW,EAAE,KAAO,EAAE,MAAQ,EAAE,KAAO,EAAE,QAAU,GACnFR,EAAmB5B,GAAUmC,EAASvB,KAAKgB,EAAmB5B,IACzB,IAAhC4B,EAAmB5B,IAAkBoC,EAAUpC,IACtDmC,EAASvB,KAAKgB,EAAmB5B,GAAW,IAAIqC,SAAQ,SAASC,EAASC,GAIzE,IAHA,IAAIC,EAAO,QAAU,CAAC,IAAM,MAAM,MAAQ,QAAQ,gBAAgB,gBAAgB,iBAAiB,iBAAiB,SAAW,WAAW,KAAO,OAAO,MAAQ,QAAQ,KAAO,OAAO,QAAU,WAAWxC,IAAUA,GAAW,IAAM,CAAC,IAAM,WAAW,MAAQ,WAAW,gBAAgB,WAAW,iBAAiB,WAAW,SAAW,WAAW,KAAO,WAAW,MAAQ,WAAW,KAAO,WAAW,QAAU,YAAYA,GAAW,OAC5ayC,EAAWhB,EAAoBK,EAAIU,EACnCE,EAAmBC,SAASC,qBAAqB,QAC7CxC,EAAI,EAAGA,EAAIsC,EAAiBpC,OAAQF,IAAK,CAChD,IAAIyC,EAAMH,EAAiBtC,GACvB0C,EAAWD,EAAIE,aAAa,cAAgBF,EAAIE,aAAa,QACjE,GAAe,eAAZF,EAAIG,MAAyBF,IAAaN,GAAQM,IAAaL,GAAW,OAAOH,IAErF,IAAIW,EAAoBN,SAASC,qBAAqB,SACtD,IAAQxC,EAAI,EAAGA,EAAI6C,EAAkB3C,OAAQF,IAAK,CAC7CyC,EAAMI,EAAkB7C,GACxB0C,EAAWD,EAAIE,aAAa,aAChC,GAAGD,IAAaN,GAAQM,IAAaL,EAAU,OAAOH,IAEvD,IAAIY,EAAUP,SAASQ,cAAc,QACrCD,EAAQF,IAAM,aACdE,EAAQE,KAAO,WACfF,EAAQG,OAASf,EACjBY,EAAQI,QAAU,SAASC,GAC1B,IAAIC,EAAUD,GAASA,EAAME,QAAUF,EAAME,OAAOC,KAAOjB,EACvDkB,EAAM,IAAIC,MAAM,qBAAuB5D,EAAU,cAAgBwD,EAAU,KAC/EG,EAAIE,KAAO,wBACXF,EAAIH,QAAUA,SACP5B,EAAmB5B,GAC1BkD,EAAQY,WAAWC,YAAYb,GAC/BX,EAAOoB,IAERT,EAAQV,KAAOC,EAEf,IAAIuB,EAAOrB,SAASC,qBAAqB,QAAQ,GACjDoB,EAAKC,YAAYf,MACfgB,MAAK,WACPtC,EAAmB5B,GAAW,MAMhC,IAAImE,EAAqBxD,EAAgBX,GACzC,GAA0B,IAAvBmE,EAGF,GAAGA,EACFhC,EAASvB,KAAKuD,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAI/B,SAAQ,SAASC,EAASC,GAC3C4B,EAAqBxD,EAAgBX,GAAW,CAACsC,EAASC,MAE3DJ,EAASvB,KAAKuD,EAAmB,GAAKC,GAGtC,IACIC,EADAC,EAAS3B,SAASQ,cAAc,UAGpCmB,EAAOC,QAAU,QACjBD,EAAOE,QAAU,IACb/C,EAAoBgD,IACvBH,EAAOI,aAAa,QAASjD,EAAoBgD,IAElDH,EAAOZ,IAAM7B,EAAe7B,GAG5B,IAAI2E,EAAQ,IAAIf,MAChBS,EAAmB,SAAUd,GAE5Be,EAAOhB,QAAUgB,EAAOjB,OAAS,KACjCuB,aAAaJ,GACb,IAAIK,EAAQlE,EAAgBX,GAC5B,GAAa,IAAV6E,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYvB,IAAyB,SAAfA,EAAMH,KAAkB,UAAYG,EAAMH,MAChE2B,EAAUxB,GAASA,EAAME,QAAUF,EAAME,OAAOC,IACpDiB,EAAMK,QAAU,iBAAmBhF,EAAU,cAAgB8E,EAAY,KAAOC,EAAU,IAC1FJ,EAAMM,KAAO,iBACbN,EAAMvB,KAAO0B,EACbH,EAAMnB,QAAUuB,EAChBF,EAAM,GAAGF,GAEVhE,EAAgBX,QAAWkF,IAG7B,IAAIV,EAAUW,YAAW,WACxBd,EAAiB,CAAEjB,KAAM,UAAWK,OAAQa,MAC1C,MACHA,EAAOhB,QAAUgB,EAAOjB,OAASgB,EACjC1B,SAASqB,KAAKC,YAAYK,GAG5B,OAAOjC,QAAQ+C,IAAIjD,IAIpBV,EAAoB4D,EAAIxE,EAGxBY,EAAoB6D,EAAI3D,EAGxBF,EAAoB8D,EAAI,SAASxD,EAASkD,EAAMO,GAC3C/D,EAAoBgE,EAAE1D,EAASkD,IAClC1E,OAAOmF,eAAe3D,EAASkD,EAAM,CAAEU,YAAY,EAAMC,IAAKJ,KAKhE/D,EAAoBoE,EAAI,SAAS9D,GACX,qBAAX+D,QAA0BA,OAAOC,aAC1CxF,OAAOmF,eAAe3D,EAAS+D,OAAOC,YAAa,CAAEC,MAAO,WAE7DzF,OAAOmF,eAAe3D,EAAS,aAAc,CAAEiE,OAAO,KAQvDvE,EAAoBwE,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQvE,EAAoBuE,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAK7F,OAAO8F,OAAO,MAGvB,GAFA5E,EAAoBoE,EAAEO,GACtB7F,OAAOmF,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOvE,EAAoB8D,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR3E,EAAoB+E,EAAI,SAASxE,GAChC,IAAIwD,EAASxD,GAAUA,EAAOmE,WAC7B,WAAwB,OAAOnE,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAP,EAAoB8D,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR/D,EAAoBgE,EAAI,SAASgB,EAAQC,GAAY,OAAOnG,OAAOC,UAAUC,eAAeC,KAAK+F,EAAQC,IAGzGjF,EAAoBK,EAAI,cAGxBL,EAAoBkF,GAAK,SAAShD,GAA2B,MAApBiD,QAAQjC,MAAMhB,GAAYA,GAEnE,IAAIkD,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAWjG,KAAK2F,KAAKM,GAC5CA,EAAWjG,KAAOf,EAClBgH,EAAaA,EAAWG,QACxB,IAAI,IAAI5G,EAAI,EAAGA,EAAIyG,EAAWvG,OAAQF,IAAKP,EAAqBgH,EAAWzG,IAC3E,IAAIU,EAAsBiG,EAI1B/F,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,gECzQTc,EAAOD,QAAU,CAAC,IAAM,gBAAgB,cAAc,0B,6DCDtD,sRAAMkF,EAAgB,iBAChBC,EAAiB,kBACjBC,EAAqB,gBACrBC,EAAgB,WAEf,SAASC,IACd,OAAOC,aAAaC,QAAQN,GAGvB,SAASO,IACd,OAAOF,aAAaC,QAAQL,GAGvB,SAASO,IACd,MAAMC,EAAgBJ,aAAaC,QAAQJ,GAC3C,IACE,OAAOQ,KAAKC,MAAMF,GAClB,MAAOxF,GACP,MAAO,IAIJ,SAAS2F,IACd,OAAOP,aAAaC,QAAQH,GAGvB,SAASU,EAAYC,GAC1B,OAAOT,aAAaU,QAAQf,EAAec,GAAsB,IAG5D,SAASE,EAAaC,GAC3B,OAAOZ,aAAaU,QAAQd,EAAgBgB,GAAwB,IAG/D,SAASC,EAAiBC,GAC/B,OAAOd,aAAaU,QAAQb,EAAoBQ,KAAKU,UAAUD,IAG1D,SAASE,EAAYC,GAC1B,OAAOjB,aAAaU,QAAQZ,EAAemB,K,8DCvCtC,SAASC,EAAQC,GACtB,OAAQA,GAAsB,IAAfA,EAAInI,O,4BCIrB,MAAMoI,EAAa,aACbC,EAAc,cAGdC,EAAe,CACnB3D,KAAM,GACN4D,MAAO,IAIHC,EAAU,CACdC,SAAUC,IACAR,EAAQQ,EAAM/D,QAAUuD,EAAQQ,EAAMH,QAK5CI,EAAU,CACd,CAACC,OAAYC,YAAW,OAAEC,IAAU,KAAEnE,EAAF,MAAQ4D,IAC1Cf,eAAY7C,GACZgD,eAAaY,GACbO,EAAOV,EAAY,CAAEzD,OAAM4D,WAE7B,CAACK,OAAYG,aAAY,OAAED,IACzBtB,eAAY,IACZG,eAAa,IACbmB,EAAOT,KAKLW,EAAY,CAChB,CAACZ,GAAYM,GAAO,KAAE/D,EAAF,MAAQ4D,IAC1BG,EAAM/D,KAAOA,EACb+D,EAAMH,MAAQA,GAEhB,CAACF,GAAaK,GACZA,EAAM/D,KAAO,GACb+D,EAAMH,MAAQ,KAIH,OACbG,MAAOJ,EACPE,UACAG,QAHa,EAIbK,a,YCtCF,MAAMC,EAAoB,oBACpBC,EAAiC,iCACjCC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAmB,mBACnBC,EAA+B,+BAC/BC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAwB,wBACxBC,EAAqC,qCACrCC,EAAqB,qBACrBC,EAA0B,0BAC1BC,EAAsB,sBACtBC,EAAa,aACbC,EAAoB,oBAGpBzB,EAAe,CACnB0B,YAAa,KACbC,gBAAiB,GACjBC,qBAAqB,EACrBC,2BAA2B,EAC3BC,gBAAiB,GACjBC,gBAAiB,GACjBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qCAAsC,GACtCC,wBAAyB,GACzBC,aAAc,KACdC,aAAc,KACdC,mBAAoB,IACpBC,IAAK,GAIDrC,EAAU,GAGVG,EAAU,CACd,MAAOC,OAAYkC,kBAAiB,OAAEhC,EAAF,SAAUiC,IAAY,MAAEC,IAC1DlC,EAAOG,GACP,MAAM,KAAEzJ,EAAF,OAAQyL,SAAiBC,eAAgBF,GAC3CC,GACFF,EAASnC,OAAYuC,gBAAiBF,GAExCnC,EAAOO,EAAkB7J,IAG3B,MAAOoJ,OAAYwC,6BACjB,OAAEtC,EAAF,SAAUiC,IACV,MAAEC,IAEFlC,EAAOI,GACP,MAAM,KAAE1J,EAAO,GAAT,OAAayL,SAAiBI,eAAwBL,GACxDC,GACFF,EAASnC,OAAYuC,gBAAiBF,GAExCnC,EAAOQ,EAA8B9J,IAGvC,MAAOoJ,OAAY0C,iBAAgB,UAAEC,IAAa,MAAEP,EAAF,aAASQ,IACzD,MAAM5D,EAAY2D,EAAUE,KAAKlD,MACjC,OAAOmD,eAAeV,EAAOQ,EAAc5D,IAG7C,MAAOgB,OAAY+C,gBAAe,UAAEJ,IAAa,MAAEP,EAAF,YAASY,EAAT,WAAsBC,IACrE,MAAMjE,EAAY2D,EAAUE,KAAKlD,MACjC,OAAOuD,eAAcd,EAAOY,EAAaC,EAAYjE,IAGvD,MAAOgB,OAAYmD,WAAU,SAAEhB,EAAF,UAAYQ,IAAa,OAAES,EAAS,KAC/D,MAAMpE,EAAY2D,EAAUE,KAAKlD,OAC3B,KAAE/I,EAAF,OAAQyL,SAAiBgB,eAASD,EAAQpE,GAIhD,OAHIqD,GACFF,EAASnC,OAAYuC,gBAAiBF,GAEjC,CAAEzL,OAAMyL,WAGjB,MAAOrC,OAAYsD,iBAAgB,SAAEnB,IAAY,UAAEoB,IACjD,MAAM,KAAE3M,EAAF,OAAQyL,SAAiBmB,eAAeD,GAI9C,OAHIlB,GACFF,EAASnC,OAAYuC,gBAAiBF,GAEjC,CAAEzL,OAAMyL,WAGjB,CAACrC,OAAYyD,kBAAiB,OAAEvD,IAAU,MAAEkC,IAC1C,MAAMsB,EAAS,KACbxD,EAAOM,IAGHmD,EAAY3K,IAChB,IAAI4K,EAAS,GACb,IACEA,EAASnF,KAAKC,MAAM1F,EAAEpC,MACtB,MAAOoC,GACP0E,QAAQmG,MAAO,2CAA0C7K,aAE3D,MAAM8K,EAAO,CACXC,UAAWH,EAASA,EAAOI,OAAOD,WAAY,IAAIE,MAAOC,UACzDpI,QAAS8H,EAASA,EAAOI,OAAOlI,QAAU,GAC1CqI,SAAUP,EAASA,EAAOI,OAAOG,SAAW,MAC5CrE,MAAO8D,EAASA,EAAOI,OAAOlE,MAAQ,OAExCI,EAAOS,EAAuB,CAAEmD,UAG5BM,EAAMC,eAAgBjC,EAAOsB,EAAQC,GAC3CzD,EAAOU,EAAoB,CAAEwD,SAG/B,CAACpE,OAAYsE,kBAAiB,OAAEpE,IAAU,aAAEqE,IAC1C,MAAMb,EAAS,KACbxD,EAAOK,IAGHoD,EAAY3K,IAChB,MAAM8K,EAAO,CACXC,WAAW,IAAIE,MAAOC,UACtBpI,QAAS9C,EAAEpC,MAEbsJ,EAAOW,EAAuB,CAAEiD,SAChC5D,EAAOgB,GACPhB,EAAOY,EAAoC,CAAEgD,UAEzCM,EAAMI,eAAgBD,EAAcb,EAAQC,GAClDzD,EAAOa,EAAoB,CAAEqD,SAG/B,CAACpE,OAAYyE,iBAAgB,OAAEvE,IAC7BA,EAAOc,IAGT,CAAChB,OAAY0E,sBAAqB,OAAExE,IAClCA,EAAOe,IAGT,CAACjB,OAAY2E,kBAAiB,OAAEzE,IAC9BA,EAAOe,GACPf,EAAOiB,IAGT,CAACnB,OAAY4E,uCAAsC,OAAE1E,IAAU,KAAE4D,IAC/D5D,EAAOY,EAAoC,CAAEgD,WAK3C1D,EAAY,CAChB,CAACC,GAAmBP,GAClBA,EAAMwB,qBAAsB,GAG9B,CAAChB,GAAgCR,GAC/BA,EAAMyB,2BAA4B,GAGpC,CAACd,GAAkBX,EAAO+E,GACxB/E,EAAMsB,YAAcyD,EACpB/E,EAAMwB,qBAAsB,GAG9B,CAACZ,GAA8BZ,GAAO,KAAEgF,EAAO,KAC7ChF,EAAMuB,gBAAkByD,EACxBhF,EAAMyB,2BAA4B,GAGpC,CAACf,GAAyBV,GACxBA,EAAM4B,qBAAsB,GAG9B,CAACf,GAAuBb,GAAO,KAAEgE,IAC/BhE,EAAM0B,gBAAkB,CAACsC,KAAShE,EAAM0B,kBAG1C,CAACZ,GAAoBd,GAAO,IAAEsE,IAC5BtE,EAAMiC,aAAeqC,GAGvB,CAAC7D,GAAyBT,GACxBA,EAAM6B,qBAAsB,GAG9B,CAACd,GAAuBf,GAAO,KAAEgE,IAC/B,MAAMiB,EAASjF,EAAM2B,gBACfuD,EAAO,EAAE,IAAKC,KAAQA,EAExBF,EAAO3N,OAAS0I,EAAMkC,mBACxBlC,EAAM2B,gBAAkB,CAACqC,KAASkB,EAAKD,IAEvCjF,EAAM2B,gBAAkB,CAACqC,KAAShE,EAAM2B,kBAI5C,CAACX,GAAoChB,GAAO,KAAEgE,IAC5C,KAAkB,aAAdhE,EAAMmC,KAAsBnC,EAAMmC,KAAOnC,EAAM+B,yBAInD,IACE,MAAMqD,EAAMzG,KAAKC,MAAMoF,EAAKhI,SAC5BgE,EAAM8B,qCAAuCnD,KAAKU,UAAU+F,OAAKlJ,EAAW,GAC5E,MAAOhD,GACP0E,QAAQmG,MAAO,2DAA0D7K,GACzE8G,EAAM8B,qCAAuC,+CAIjD,CAACV,GAAYpB,GACX,MAAMiF,EAASjF,EAAM2B,gBACf0D,EAAOC,KAAKC,IAAIN,EAAO,GAAGhB,UAAYgB,EAAOA,EAAO3N,OAAS,GAAG2M,WAChE9B,GAAO8C,EAAO3N,QAAU+N,EAAO,MAAOG,QAAQ,GACpDxF,EAAMmC,IAAM,IAAIsD,OAAOtD,IAGzB,CAAClB,GAAoBjB,GAAO,IAAEsE,IAC5BtE,EAAMgC,aAAesC,GAGvB,CAACpD,GAAyBlB,GACxBA,EAAM2B,gBAAkB,IAG1B,CAACR,GAAqBnB,GACpB,MAAMsE,EAAMtE,EAAMgC,aACdsC,GACFA,EAAIoB,QAEN1F,EAAMmC,IAAM,EACZnC,EAAMgC,aAAe,KACrBhC,EAAM6B,qBAAsB,GAG9B,CAACR,GAAmBrB,GAClBA,EAAMiC,aAAe,KACrBjC,EAAMsB,YAAc,KACpBtB,EAAMuB,gBAAkB,GACxBvB,EAAM0B,gBAAkB,GACxB1B,EAAM2B,gBAAkB,GACxB3B,EAAM8B,qCAAuC,GAC7C9B,EAAMmC,IAAM,IAID,OACbnC,MAAOJ,EACPE,QAFa,EAGbG,QAHa,EAIbK,UAASA,GClQX,MAAMqF,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAsB,sBAGtBnG,EAAe,CACnBoF,KAAM,GACNgB,SAAU,GACVC,WAAY,EACZC,eAAe,EACfC,eAAgB,CACdC,IAAK,EACLC,OAAQ,GAEVC,MAAO,GAIHxG,EAAU,GAGVG,EAAU,CACd,MAAOC,OAAYqG,YACjB,OAAEnG,EAAF,MAAUJ,EAAV,SAAiBqC,IACjB,WAAEmE,EAAF,gBAAcC,GAAoB,IAElC,MAAMC,EAAS1G,EAAMgG,UAAYhG,EAAMiG,WAAa,GACpD7F,EAAOyF,GACP,MAAM,KAAE/O,EAAO,GAAT,OAAayL,SAAiBoE,eAClC3G,EAAMgG,SACNU,EACAF,EACAC,GAEElE,GACFF,EAASnC,OAAYuC,gBAAiBF,GAExCnC,EAAO0F,EAAehP,GACtBsJ,EAAO2F,EAAqBjP,IAG9B,CAACoJ,OAAY0G,0BAAyB,OAAExG,IAAU,KAAEyG,EAAO,KACzDzG,EAAOuF,EAAekB,IAGxB,CAAC3G,OAAY4G,4BAA2B,OAAE1G,IAAU,WAAE6F,EAAa,IACjE7F,EAAOwF,EAAiBK,KAKtB3F,EAAY,CAChB,CAACuF,GAAgB7F,GACfA,EAAMkG,eAAgB,GAGxB,CAACP,GAAe3F,EAAO6G,GACrB7G,EAAMgG,SAAWa,GAGnB,CAACjB,GAAiB5F,EAAOiG,GACvBjG,EAAMiG,WAAaA,GAGrB,CAACH,GAAe9F,GAAO,KAAEgF,EAAO,GAAT,MAAasB,EAAQ,IAC1CtG,EAAMgF,KAAOA,EACbhF,EAAMsG,MAAQA,EACdtG,EAAMkG,eAAgB,GAGxB,CAACH,GAAqB/F,GAAO,KAAEgF,EAAO,KACpC,IAAIoB,EAAM,EACNC,EAAS,EACbrB,EAAK+B,QAAQ/C,IACXoC,GAAOpC,EAAKgD,QACZX,EAASrC,EAAKiD,YAEhBjH,EAAMmG,eAAiB,CACrBC,MACAC,YAKS,OACbrG,MAAOJ,EACPE,QAFa,EAGbG,QAHa,EAIbK,UAASA,G,YCxFJ4G,eAAeC,EACpBnB,EAAW,GACXU,EAAS,EACTU,EAAe,GACfC,EAAoB,IAEpB,MAAMC,EAAUC,iBAChB,IAAIC,EAAcJ,EACb,eAAcA,MACf,GACJI,GAAeH,EAAqB,WAAUA,EAAsB,GAEpE,IAAII,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAO/K,IACJ,iCAAgCoJ,YAAmBU,6BAAkCc,MAI1F,OAAOI,eAAkBH,GAGpBP,eAAeW,EAAuBC,GAC3C,MAAMR,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAO/K,IAAK,uBAAsBkL,IAGpC,OAAOF,eAAkBH,GAGpBP,eAAea,EAAoBD,GACxC,MAAMR,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAO/K,IAAK,uBAAsBkL,WAGpC,OAAOF,eAAkBH,GAGpBP,eAAec,EAAiBC,GACrC,MAAMX,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAOO,KAAM,sBAAsBD,IAGrC,OAAOL,eAAkBH,GAGpBP,eAAeiB,EAAyBL,EAAWM,GACxD,MAAMd,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAOU,IAAK,uBAAsBP,EAAaM,IAGjD,OAAOR,eAAkBH,GAGpBP,eAAeoB,EAA8BR,EAAWS,EAAgBrJ,GAC7E,MAAMoI,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAOO,KAAM,uBAAsBJ,2BAAoC,CACrE7L,KAAM6L,EACN/E,KAAM7D,KACHqJ,KAIP,OAAOX,eAAkBH,GAGpBP,eAAesB,EAAyBV,EAAWW,EAAWvJ,GACnE,MAAMoI,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAOO,KAAM,uBAAsBJ,sBAA+B,CAChE7L,KAAM6L,EACN/E,KAAM7D,KACHuJ,KAIP,OAAOb,eAAkBH,GAGpBP,eAAewB,GAAuCZ,EAAWa,EAAiBzJ,GACvF,MAAMoI,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAOO,KAAM,uBAAsBJ,oCAA6C,CAC9E7L,KAAM6L,EACN/E,KAAM7D,KACHyJ,KAIP,OAAOf,eAAkBH,GAGpBP,eAAe0B,GAA2Bd,EAAWe,EAAQ3J,GAClE,MAAMoI,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAOO,KAAM,uBAAsBJ,wBAAiC,CAClE7L,KAAM6L,EACN/E,KAAM7D,EACN2J,YAIJ,OAAOjB,eAAkBH,GAGpBP,eAAe4B,GAAoBhB,EAAWrE,GACnD,MAAM6D,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAOO,KAAM,uBAAsBJ,SAAkBrE,IAGvD,OAAOmE,eAAkBH,GAGpBP,eAAe6B,GAAiBjB,EAAW5I,GAChD,MAAM,OAAEyI,GAAWqB,iBACnB,IAAIxO,EAAUmN,EAAOO,KAAM,uBAAsBJ,0BAAmC,CAClF/E,KAAM7D,EACNjD,KAAM6L,IAGR,OAAOF,eAAkB,CAACpN,IAGrB0M,eAAe+B,GAAkBnB,EAAW5I,GACjD,MAAM,OAAEyI,GAAWqB,iBACnB,IAAIxO,EAAUmN,EAAOO,KAAM,uBAAsBJ,2BAAoC,CACnF/E,KAAM7D,EACNjD,KAAM6L,IAGR,OAAOF,eAAkB,CAACpN,IAGrB0M,eAAegC,GAAiBpB,EAAW5I,GAChD,MAAM,OAAEyI,GAAWqB,iBACnB,IAAIxO,EAAUmN,EAAOwB,OAAQ,uBAAsBrB,UAAkB5I,KAErE,OAAO0I,eAAkB,CAACpN,ICnI5B,MAAM4O,GAA4B,4BAC5BC,GAA2B,2BAC3BC,GAAyB,yBACzBC,GAAoC,oCAGpC3J,GAAe,CACnB4J,mBAAoB,KACpBC,0BAA2B,GAC3BC,4BAA4B,EAC5BC,yBAAyB,GAIrB7J,GAAU,GAGVG,GAAU,CACd,MAAOC,OAAY0J,mBAAkB,SAAEvH,IAAY,WAAE4F,IACnD,MAAM,KAAEnR,EAAF,OAAQyL,SAAiByF,EAAiBC,GAIhD,OAHI1F,GACFF,EAASnC,OAAYuC,gBAAiBF,GAEjC,CAAEzL,OAAMyL,WAEjB,MAAOrC,OAAY2J,2BAA0B,SAAExH,IAAY,UAAEyF,EAAF,WAAaG,IACtE,MAAM,KAAEnR,EAAF,OAAQyL,SAAiB4F,EAAyBL,EAAWG,GAInE,OAHI1F,GACFF,EAASnC,OAAYuC,gBAAiBF,GAEjC,CAAEzL,OAAMyL,WAEjB,MAAOrC,OAAY4J,gCAA+B,UAAEjH,EAAF,SAAaR,IAAY,UAAEyF,EAAF,eAAaS,IACtF,MAAMrJ,EAAY2D,EAAUE,KAAKlD,OAC3B,KAAE/I,EAAF,OAAQyL,SAAiB+F,EAA8BR,EAAWS,EAAgBrJ,GAIxF,OAHIqD,GACFF,EAASnC,OAAYuC,gBAAiBF,GAEjC,CAAEzL,OAAMyL,WAEjB,MAAOrC,OAAY6J,2BAA0B,UAAElH,EAAF,SAAaR,IAAY,UAAEyF,EAAF,UAAaW,IACjF,MAAMvJ,EAAY2D,EAAUE,KAAKlD,OAC3B,KAAE/I,EAAF,OAAQyL,SAAiBiG,EAAyBV,EAAWW,EAAWvJ,GAI9E,OAHIqD,GACFF,EAASnC,OAAYuC,gBAAiBF,GAEjC,CAAEzL,OAAMyL,WAEjB,MAAOrC,OAAY8J,yCAAwC,UAAEnH,EAAF,SAAaR,IAAY,UAAEyF,EAAF,gBAAaa,IAC/F,MAAMzJ,EAAY2D,EAAUE,KAAKlD,OAC3B,KAAE/I,EAAF,OAAQyL,SAAiBmG,GAAuCZ,EAAWa,EAAiBzJ,GAIlG,OAHIqD,GACFF,EAASnC,OAAYuC,gBAAiBF,GAEjC,CAAEzL,OAAMyL,WAEjB,MAAOrC,OAAY+J,6BAA4B,UAAEpH,EAAF,SAAaR,IAAY,UAAEyF,EAAF,OAAae,IACnF,MAAM3J,EAAY2D,EAAUE,KAAKlD,OAC3B,KAAE/I,EAAF,OAAQyL,SAAiBqG,GAA2Bd,EAAWe,EAAQ3J,GAI7E,OAHIqD,GACFF,EAASnC,OAAYuC,gBAAiBF,GAEjC,CAAEzL,OAAMyL,WAEjB,MAAOrC,OAAYgK,yBACjB,OAAE9J,EAAF,SAAUiC,IACV,UAAEyF,IAEF1H,EAAOgJ,IACP,MAAM,KAAEtS,EAAF,OAAQyL,SAAiBsF,EAAuBC,GAClDvF,GACFF,EAASnC,OAAYuC,gBAAiBF,GAExCnC,EAAOiJ,GAA0BvS,IAEnC,MAAOoJ,OAAYiK,sBAAqB,OAAE/J,EAAF,SAAUiC,IAAY,UAAEyF,IAC9D1H,EAAOkJ,IACP,MAAM,KAAExS,EAAF,OAAQyL,SAAiBwF,EAAoBD,GAC/CvF,GACFF,EAASnC,OAAYuC,gBAAiBF,GAExCnC,EAAOmJ,GAAmCzS,IAE5C,MAAOoJ,OAAYkK,mBAAkB,UAAEvH,IAAa,UAAEiF,IACpD,MAAM5I,EAAY2D,EAAUE,KAAKlD,MACjC,OAAOkJ,GAAiBjB,EAAW5I,IAErC,MAAOgB,OAAYmK,oBAAmB,UAAExH,IAAa,UAAEiF,IACrD,MAAM5I,EAAY2D,EAAUE,KAAKlD,MACjC,OAAOoJ,GAAkBnB,EAAW5I,IAEtC,MAAOgB,OAAYoK,mBAAkB,UAAEzH,IAAa,UAAEiF,IACpD,MAAM5I,EAAY2D,EAAUE,KAAKlD,MACjC,OAAOqJ,GAAiBpB,EAAW5I,IAErC,MAAOgB,OAAYqK,sBAAqB,SAAElI,IAAY,UAAEyF,EAAF,UAAarE,IACjE,MAAM,KAAE3M,EAAF,OAAQyL,SAAiBuG,GAAoBhB,EAAWrE,GAI9D,OAHIlB,GACFF,EAASnC,OAAYuC,gBAAiBF,GAEjC,CAAEzL,OAAMyL,YAKbjC,GAAY,CAChB,CAAC8I,IAA2BpJ,GAC1BA,EAAM0J,4BAA6B,GAGrC,CAACJ,IAAwBtJ,GACvBA,EAAM2J,yBAA0B,GAGlC,CAACN,IAA0BrJ,EAAOiI,GAChCjI,EAAMwJ,mBAAqBvB,EAC3BjI,EAAM0J,4BAA6B,GAGrC,CAACH,IAAmCvJ,GAAO,KAAEgF,IAC3ChF,EAAMyJ,0BAA4BzE,EAClChF,EAAM2J,yBAA0B,IAIrB,QACb3J,MAAOJ,GACPE,QAFa,GAGbG,QAHa,GAIbK,UAASA,IC9IX,MAAMqF,GAAgB,gBAChBC,GAAkB,kBAClB4E,GAAyB,iBACzBC,GAAwB,gBAGxB7K,GAAe,CACnBoF,KAAM,GACNgB,SAAU,GACVC,WAAY,EACZC,eAAe,EACfI,MAAO,GAIHxG,GAAU,GAGVG,GAAU,CACd,MAAOC,OAAYwK,mBACjB,OAAEtK,EAAF,MAAUJ,EAAV,SAAiBqC,IACjB,WAAEmE,EAAF,gBAAcC,GAAoB,IAElC,MAAMC,EAAS1G,EAAMgG,UAAYhG,EAAMiG,WAAa,GACpD7F,EAAOoK,IACP,MAAM,KAAE1T,EAAO,GAAT,OAAayL,SAAiB4E,EAClCnH,EAAMgG,SACNU,EACAF,EACAC,GAEElE,GACFF,EAASnC,OAAYuC,gBAAiBF,GAExCnC,EAAOqK,GAAuB3T,IAGhC,CAACoJ,OAAYyK,6BAA4B,OAAEvK,IAAU,KAAEyG,EAAO,KAC5DzG,EAAOuF,GAAekB,IAGxB,CAAC3G,OAAY0K,+BAA8B,OAAExK,IAAU,WAAE6F,EAAa,IACpE7F,EAAOwF,GAAiBK,KAKtB3F,GAAY,CAChB,CAACkK,IAAwBxK,GACvBA,EAAMkG,eAAgB,GAGxB,CAACP,IAAe3F,EAAO6G,GACrB7G,EAAMgG,SAAWa,GAGnB,CAACjB,IAAiB5F,EAAOiG,GACvBjG,EAAMiG,WAAaA,GAGrB,CAACwE,IAAuBzK,GAAO,KAAEgF,EAAO,GAAT,MAAasB,EAAQ,IAClDtG,EAAMgF,KAAOA,EACbhF,EAAMkG,eAAgB,EACtBlG,EAAMsG,MAAQA,IAIH,QACbtG,MAAOJ,GACPE,QAFa,GAGbG,QAHa,GAIbK,UAASA,I,wBCrEJ4G,eAAe2D,KACpB,MAAMvD,EAAUC,iBAEhB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAO/K,IAAI,0BAGTkO,QAAkBC,KAAQtD,GAC9B,MAAMuD,EAAeF,EAAUpD,IAAIuD,GAC7BA,EAASC,YACJ,CAAEpU,KAAMmU,EAASjO,MAAMlG,MAEzB,CAAEyL,OAAQ4I,eAAyBF,EAASG,OAAOH,YAE5D,OAAOD,EAAa,GCftB,MAAMK,GAAqB,qBACrBC,GAAoB,mBACpBC,GAAgB,gBAChBC,GAA4B,4BAG5B5L,GAAe,CACnB6L,cAAe,GACfC,aAAc,GACdnM,SAAU,GACVoM,cAAe,IAIX7L,GAAU,GAGVG,GAAU,CACd,CAACC,OAAY0L,mBAAkB,OAAExL,GAAUqL,EAAgB,IACzDtM,eAAiBsM,GACjBrL,EAAOiL,GAAoBI,IAE7B,CAACvL,OAAY2L,cAAa,OAAEzL,GAAUb,GACpCD,eAAYC,GACZa,EAAOmL,GAAehM,IAExB,CAACW,OAAYuC,kBAAiB,OAAErC,GAAUmC,EAAS,IACjDnC,EAAOkL,GAAmB/I,IAE5B,MAAOrC,OAAY4L,qBAAoB,OAAE1L,EAAF,SAAUiC,IAC/C,MAAM,KAAEvL,EAAO,GAAT,OAAayL,SAAiBsI,KAChCtI,GACFF,EAASnC,OAAYuC,gBAAiBF,GAExCnC,EAAOoL,GAA2B1U,KAKhCwJ,GAAY,CAChB,CAAC+K,IAAoBrL,EAAOyL,GAC1BzL,EAAMyL,cAAgBA,GAExB,CAACH,IAAmBtL,EAAOuC,GACzBvC,EAAM0L,aAAe,IAAI1L,EAAM0L,gBAAiBnJ,IAElD,CAACgJ,IAAevL,EAAOT,GACrBS,EAAMT,SAAWA,GAEnB,CAACiM,IAA2BxL,EAAOgF,GACjChF,EAAM2L,cAAgB3G,IAIX,QACbhF,MAAOJ,GACPE,QAFa,GAGbG,QAHa,GAIbK,UAASA,IC1DJ4G,eAAe6E,KACpB,MAAM,OAAEpE,GAAWqB,iBAEbxO,EAAUmN,EAAO/K,IACpB,qBAGH,OAAOgL,eAAkB,CAACpN,IAGrB0M,eAAe8E,GAAwBC,GAC5C,MAAM,OAAEtE,GAAWqB,iBACbkD,EAAeD,EAAiBE,MAAM,KAAKC,MAAMC,QAAQ,eAAgB,SAEzE7R,EAAUmN,EAAO/K,IACpB,qBAAoBsP,GAGvB,OAAOtE,eAAkB,CAACpN,IAGrB0M,eAAeoF,GAAeC,GACnC,MAAM,OAAE5E,GAAWqB,iBAEbwD,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,GAExB,MAAM/R,EAAUmN,EAAOO,KACpB,oBACDsE,GAGF,OAAO5E,eAAkB,CAACpN,IC9B5B,MAAMmS,GAAsB,sBACtBC,GAAwB,wBACxBC,GAAmC,mCAGnCjN,GAAe,CACnBkN,iBAAkB,KAClBC,6BAA6B,EAC7BC,+BAAgC,MAI5BlN,GAAU,GAGVG,GAAU,CACd,MAAOC,OAAY+M,mBAAkB,OAAE7M,EAAF,SAAUiC,IAAY,aAAE6J,IAC3D9L,EAAOuM,IACP,MAAM,KAAE7V,EAAF,OAAQyL,SAAiByJ,GAAwBE,GACnD3J,GACFF,EAASnC,OAAYuC,gBAAiBF,GAExCnC,EAAOyM,GAAkC/V,GACzCsJ,EAAOwM,GAAuB,CAAEV,kBAElC,MAAOhM,OAAYgN,oBAAoB,KAAEX,IACvC,MAAM,KAAEzV,EAAF,OAAQyL,SAAiB+J,GAAeC,GAI9C,OAHIhK,GACFF,SAASnC,OAAYuC,gBAAiBF,GAEjCzL,IAKLwJ,GAAY,CAChB,CAACqM,IAAqB3M,GACpBA,EAAM+M,6BAA8B,GAEtC,CAACH,IAAuB5M,GAAO,aAAEkM,IAC/BlM,EAAM8M,iBAAmBZ,GAE3B,CAACW,IAAkC7M,EAAOmN,GACxCnN,EAAMgN,+BAAiCG,EACvCnN,EAAM+M,6BAA8B,IAIzB,QACb/M,MAAOJ,GACPE,QAFa,GAGbG,QAHa,GAIbK,UAASA,ICvDX,MAAM8M,GAAuB,uBACvBC,GAAqB,qBAGrBzN,GAAe,CACnB0N,wBAAwB,EACxBC,cAAe,IAIXzN,GAAU,GAGVG,GAAU,CACd,MAAOC,OAAYsN,iBAAgB,OAAEpN,EAAF,SAAUiC,IAC3CjC,EAAOgN,IACP,MAAM,KAAEtW,EAAF,OAAQyL,SAAiBwJ,KAC3BxJ,GACFF,EAASnC,OAAYuC,gBAAiBF,GAExCnC,EAAOiN,GAAoBvW,KAKzBwJ,GAAY,CAChB,CAAC8M,IAAsBpN,GACrBA,EAAMsN,wBAAyB,GAEjC,CAACD,IAAoBrN,EAAOgF,EAAO,IACjChF,EAAMuN,cAAgBvI,EACtBhF,EAAMsN,wBAAyB,IAIpB,QACbtN,MAAOJ,GACPE,QAFa,GAGbG,QAHa,GAIbK,UAASA,IChCXmN,aAAIC,IAAIC,QACR,MAAMC,IAAUC,EAED,WAAIF,OAAKG,MAAM,CAC5BjW,QAAS,CACPkL,OACAgC,MACAgJ,OACA9F,cACA+F,eACAC,YACAC,YACAC,cAEFC,OAAQR,M,oCCzBV,sQAIO,SAASrG,IACd,MAAMnI,EAAUiP,OAAMrO,MAAMiO,SAASxC,cACrC,OAAOrM,EAAQsI,IAAI4G,IAAU,CAC3BrS,KAAMqS,EAAOrS,KACb0L,OAAQ4G,IAAMlR,OAAO,CACnBmR,QAASF,EAAOG,SAMf,SAASzF,IACd,MAAMsF,EAASD,OAAMrO,MAAMiO,SAASxC,cAAc,GAClD,MAAO,CACLxP,KAAMqS,EAAOrS,KACb0L,OAAQ4G,IAAMlR,OAAO,CACnBmR,QAASF,EAAOG,OAMf,SAASC,IACd,MAAMJ,EAASD,OAAMrO,MAAMiO,SAASxC,cAAc,GAClD,OAAO6C,EAAOG,IAGTvH,eAAeU,EAAkBH,GACtC,IAAIqD,QAAkBC,IAAQtD,GAC9B,MAAMuD,EAAeF,EAAUpD,IAAIuD,GAC7BA,EAASC,YACJ,CAAEpU,KAAMmU,EAASjO,MAAMlG,MAEzB,CAAEyL,OAAQ4I,EAAyBF,EAASG,OAAOH,YAE5D,OAAOD,EAAa,GAGf,SAASG,EAAyBF,GACvC,OAAIA,GAAgC,MAApBA,EAAS/G,OAChB,CACL,CACErJ,KAAM,EACNmB,QAAU,2BACRiP,EAASzQ,QAAQmU,qCAId1D,GAAYA,EAASnU,KACvB,CAACmU,EAASnU,MAEZ,CAAC,CAAE+D,KAAM,EAAGmB,QAAS,6CAGvB,SAAS4S,EAAqBH,EAAK7K,EAAQC,EAAWgL,GAC3D,MAAMC,EAAc,IAAIC,YAAYN,GAIpC,OAHAK,EAAYE,OAASpL,EACrBkL,EAAYG,UAAYpL,EACxBiL,EAAYxU,QAAUuU,EACfC,I,yIC/CM,OACbI,OAAQC,IACNC,OACAC,OACAC,OACAC,OACAC,OACAC,OACAC,OACAC,OACAC,OACAC,QAEFpC,aAAIqC,UAAU,oBAAqBC,S,yGCnBtB,G,UAAA,KACbtC,aAAIC,IAAI,IAAQsC,WAChBC,IAAOvC,IAAIwC,KAEXzC,aAAIjW,UAAU2Y,SAAW,CACvBtJ,KAAM,QACNuJ,OAAQ,KAEV3C,aAAIjW,UAAU6Y,SAAW,IAAQC,QACjC7C,aAAIjW,UAAU+Y,SAAW,IAAWC,QACpC/C,aAAIjW,UAAUiZ,SAAd,MCpBEC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,GAAKN,EAAIO,OAAOC,MAAM,CAACJ,EAAG,eAAe,CAACE,MAAM,CAAC,UAAY,aAAa,CAAEN,EAAY,SAAEI,EAAG,SAAS,CAACK,YAAY,YAAYH,MAAM,CAAC,YAAYN,EAAI5R,UAAUsS,GAAG,CAAC,kBAAkBV,EAAIW,UAAUX,EAAIY,KAAKR,EAAG,UAAU,CAACJ,EAAIa,GAAIb,EAAiB,eAAE,SAAS3U,GAAS,OAAO+U,EAAG,WAAW,CAACzT,IAAItB,EAAQyV,MAAMd,EAAIO,OAAO,eAAeD,MAAM,CAAC,MAAQjV,EAAQ,KAAO,cAAa+U,EAAG,gBAAgB,IAAI,IAAI,IAC7fW,EAAkB,G,2ECDlB,EAAS,WAAa,IAAIf,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,UAAU,CAACK,YAAY,UAAUH,MAAM,CAAC,iBAAiBN,EAAIgB,WAAW,KAAO,aAAa,mBAAmBhB,EAAIiB,gBAAgB,aAAajB,EAAIkB,UAAU,oBAAoBlB,EAAImB,gBAAgB,gBAAgB,GAAG,OAAS,KAAK,CAACf,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,MAAM,CAACF,EAAG,KAAK,CAACJ,EAAIoB,GAAG,cAAchB,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,cAAc,CAACF,EAAG,WAAW,CAACiB,KAAK,SAAS,CAACrB,EAAIoB,GAAG,6BAA6B,GAAGhB,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,UAAU,CAACF,EAAG,WAAW,CAACiB,KAAK,SAAS,CAACrB,EAAIoB,GAAG,yBAAyB,GAAGhB,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,UAAU,CAACF,EAAG,WAAW,CAACiB,KAAK,SAAS,CAACrB,EAAIoB,GAAG,yBAAyB,GAAGhB,EAAG,aAAa,CAACU,MAAMd,EAAIO,OAAO,iBAAiBD,MAAM,CAAC,MAAQ,cAAc,CAACF,EAAG,WAAW,CAACiB,KAAK,SAAS,CAACrB,EAAIoB,GAAG,WAAWpB,EAAIsB,GAAGtB,EAAI5R,UAAU,YAAYgS,EAAG,eAAe,CAACM,GAAG,CAAC,MAAQV,EAAIuB,eAAe,CAACvB,EAAIoB,GAAG,2BAA2B,IAAI,IAC39B,EAAkB,G,+DC+CtB,GACE9V,KAAM,SAENkW,WAAY,CACV,CAAC,EAAL,YACI,CAAC,EAAL,YACI,CAAC,EAAL,aAGEC,MAAO,CACLrT,SAAU,CACR3E,KAAMiY,OACNC,UAAU,IAId,OACE,MAAO,CACLC,OAAN,OACMX,gBAAiB,UACjBC,UAAW,QACXC,gBAAiBU,iBACvB,0BACA,mCAIEC,SAAU,CACRd,WAAY,WACV,MAAO,IAAIf,KAAK8B,OAAOC,KAAKxG,MAAM,KAAK,KAI3CyG,QAAS,CACP,eACEhC,KAAKiC,MAAM,sBCnF+T,I,wBCQhV,SAASC,EAAcC,GAErBnC,KAAK,UAAa,aAAOoC,QAAU,aAMrC,IAAIlD,EAAY,eACd,EACA,EACA,GACA,EACAgD,EACA,KACA,MAIa,EAAAhD,E,gCCGf,uBACE7T,KAAM,MAENkW,WAAY,CACV,CAAC,EAAL,YACI,CAAC,EAAL,YACI,CAAC,EAAL,YACIc,OAAJ,GAGER,SAAU,IACZ,gBACM1T,SAAUiB,GAASA,EAAM+C,KAAK9G,KAC9BiX,cAAelT,GACN,IAAImT,IACnB,4BACA,gCAKO,OAAP,OAAO,CAAP,eAGEP,QAAS,CACP,SACEvE,EAAN,iCACMA,EAAN,0CACMuC,KAAKwC,QAAQxb,KAAK,cC1DsS,I,YCQ9T,SAAS,EAAcmb,GAErBnC,KAAK,UAAa,aAAOoC,QAAU,aAMrC,IAAI,EAAY,eACd,EACAtC,EACAgB,GACA,EACA,EACA,KACA,MAIa,K,qBCzBA,YAAS2B,EAAIC,EAAOC,GAC7BF,EAAGG,QAAQC,KAAK3P,GAAUA,EAAO4P,KAAKC,cACnCtF,OAAMvO,QAAQC,SAGjBwT,IAFAA,EAAK,UAKPA,KCVW,YAASF,EAAIC,EAAOM,GACjC,MAAMC,EAAwBR,EAAGG,QAC9BxV,QACA8V,UACAC,KAAKlX,GAAKA,EAAE6W,MAAQ7W,EAAE6W,KAAKM,OAC1BH,IACFla,SAASqa,MAAQH,EAAsBH,KAAKM,QCFhDvG,aAAIC,IAAIuG,SAER,MAAMC,GAAS,IAAID,QAAO,CACxB/W,KAAM,OACNiX,KAAMtG,cACNuG,OAAQ,CACN,CACEzB,KAAM,IACN0B,SAAU,CAAEpY,KAAM,aAEpB,CACE0W,KAAM,SACN1W,KAAM,QACNyX,KAAM,CAAEM,MAAO,kBACflE,UAAW,IACT,6EAEJ,CACE6C,KAAM,QACN1W,KAAM,OACNyX,KAAM,CAAEC,cAAc,EAAMK,MAAO,iBACnClE,UAAW,IACT,2EAEJ,CACE6C,KAAM,eACN1W,KAAM,YACNyX,KAAM,CAAEC,cAAc,EAAMK,MAAO,uBACnClE,UAAW,IACT,2EAEJ,CACE6C,KAAM,YACN1W,KAAM,WACNyX,KAAM,CAAEC,cAAc,EAAMK,MAAO,qBACnClE,UAAW,IACT,qGAEJ,CACE6C,KAAM,mBACN1W,KAAM,oBACNyX,KAAM,CAAEC,cAAc,EAAMK,MAAO,2BACnClE,UAAW,IACT,qGAIJ,CACE6C,KAAM,uBACN1W,KAAM,gBACNyX,KAAM,CAAEC,cAAc,EAAMK,MAAO,2BACnClE,UAAW,IACT,qGAIJ,CACE6C,KAAM,8BACN1W,KAAM,gBACNyX,KAAM,CAAEC,cAAc,EAAMK,MAAO,2BACnClE,UAAW,IACT,qGAIJ,CACE6C,KAAM,8BACN1W,KAAM,mBACNyX,KAAM,CAAEC,cAAc,EAAMK,MAAO,mCACnClE,UAAW,IACT,qGAIJ,CACE6C,KAAM,WACN1W,KAAM,UACNyX,KAAM,CAAEC,cAAc,EAAMK,MAAO,oBACnClE,UAAW,IACT,0CAEJ,CACE6C,KAAM,SACN1W,KAAM,QACNyX,KAAM,CAAEC,cAAc,EAAMK,MAAO,kBACnClE,UAAW,IACT,wCAEJ,CACE6C,KAAM,QACN1W,KAAM,OACNyX,KAAM,CAAEC,cAAc,EAAOK,MAAO,iBACpClE,UAAW,IACT,uCAEJ,CACE6C,KAAM,OACN1W,KAAM,MACN6T,UAAW,IACT,sCAEJ,CACE6C,KAAM,IACN0B,SAAU,CAAEpY,KAAM,SAGtBqY,eAAeC,EAAKjB,EAAOkB,GACzB,OAAIA,GAGK,CAAEC,EAAG,EAAGC,EAAG,MAKxBR,GAAOS,WAAW,CAACtB,EAAIuB,EAAMrB,KAC3BsB,GAAKxB,EAAIuB,EAAMrB,GACfuB,GAAUzB,EAAIuB,EAAMrB,KAGPW,U,yBC3GfzG,aAAIsH,OAAOC,eAAgB,EAG3BC,IACAC,IACAzH,aAAIC,IAAIyH,IAAa,CACnBC,UAAW,SAEb3H,aAAIC,IAAI2H,KAER,WACE,MAAMC,EAAW,CACfrZ,KAAMoC,kBACNwB,MAAOrB,mBAET6P,OAAMhM,SAASnC,OAAYC,UAAWmV,GACtCjH,OAAMhM,SAASnC,OAAY0L,iBAAkBnN,mBAC7C4P,OAAMhM,SAASnC,OAAY2L,YAAahN,mBAP1C,GAUA,IAAI4O,aAAI,CACNyG,UACA7F,aACAqC,OAAQ6E,GAAKA,EAAEC,MACdC,OAAO,S,oCCzCV,kCAAO,MAAMvV,EAAc,CACzBC,UAAW,YACXE,WAAY,aACZoC,gBAAiB,kBACjBmJ,iBAAkB,mBAClBE,mBAAoB,qBACpBD,YAAa,cACbtF,UAAW,YACXK,wBAAyB,0BACzBE,0BAA2B,4BAC3B1E,gBAAiB,kBACjBwH,iBAAkB,mBAClBc,iBAAkB,mBAClBhI,2BAA4B,6BAC5BiB,gBAAiB,kBACjBa,gBAAiB,kBACjBG,eAAgB,iBAChBG,qCAAsC,uCACtCF,oBAAqB,sBACrBvB,SAAU,WACVT,eAAgB,iBAChBK,cAAe,gBACf4B,gBAAiB,kBACjB8F,2BAA4B,6BAC5BC,6BAA8B,+BAC9BV,uBAAwB,yBACxBC,oBAAqB,sBACrBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,iBAAkB,mBAClBoL,kBAAmB,oBACnBnL,oBAAqB,sBACrB/G,eAAgB,iBAChBmS,yBAA0B,2BAC1BnI,eAAgB,iBAChBP,iBAAkB,mBAClBC,eAAgB,iBAChBrD,yBAA0B,2BAC1BC,8BAA+B,gCAC/BC,yBAA0B,2BAC1BC,uCAAwC,yCACxCC,2BAA4B,+B,oCCzC9B,oE,oCCAA,oWAQA,MAAMmB,EAAS,wBAERlE,eAAeP,EAAUX,EAAW,GAAIU,EAAS,EAAGU,EAAe,GAAIC,EAAoB,IAChG,MAAMC,EAAUC,iBAChB,IAAIC,EAAcJ,EACb,eAAcA,MACf,GACJI,GAAeH,EAAqB,WAAUA,EAAsB,GAEpE,MAAMI,EAAWH,EAAQI,IAAI,EAAGC,YAC9BA,EAAO/K,IACJ,0BAAyBoJ,YAAmBU,iBAAsBc,MAIvE,OAAOI,eAAkBH,GAGpBP,eAAe1E,EAAgBF,GACpC,MAAMgF,EAAUC,iBACVE,EAAWH,EAAQI,IAAI,EAAGC,YAC9BA,EAAO/K,IAAK,gBAAe0F,IAG7B,OAAOsF,eAAkBH,GAGpBP,eAAevE,EAAwBL,GAC5C,MAAMgF,EAAUC,iBACVE,EAAWH,EAAQI,IAAI,EAAGC,YAC9BA,EAAO/K,IAAK,gBAAe0F,sBAG7B,OAAOsF,eAAkBH,GAGpBP,eAAelE,EAAeV,EAAOQ,EAAc5D,GACxD,MAAM,OAAEyI,GAAWqB,iBACbxO,EAAUmN,EAAOO,KAAM,gBAAe5F,2BAAgC,CAC1ES,KAAM7D,EACN4D,eACAsI,WAGF,OAAOxD,eAAkB,CAACpN,IAGrB0M,eAAe9D,EAAcd,EAAOY,EAAaC,EAAYjE,GAClE,MAAM,OAAEyI,GAAWqB,iBACbxO,EAAUmN,EAAOO,KAAM,gBAAe5F,uBAA4B,CACtEsT,MAAOtT,EACPuT,YAAa3S,EACb4S,WAAY3S,EACZJ,KAAM7D,IAGR,OAAO0I,eAAkB,CAACpN,IAGrB0M,eAAe3D,EAASD,EAAQpE,GACrC,MAAM,OAAEyI,GAAWqB,iBACbvB,EAAWnE,EAAOoE,IAAIpF,GAC1BqF,EAAOwB,OAAQ,gBAAe7G,UAAcpD,YAAoBkM,MAGlE,OAAOxD,eAAkBH,GAGpBP,eAAe3C,EAAgBjC,EAAOsB,EAAQC,EAAWgL,GAC9D,MAAMkH,EAAgBrH,iBAChBD,EAAO,GAAEsH,sBAAkCzT,IACjD,OAAOsM,eAAqBH,EAAK7K,EAAQC,EAAWgL,GAG/C3H,eAAexD,EAAeD,GACnC,MAAM6D,EAAUC,iBAChB,IAAIE,EAAWH,EAAQI,IAAI,EAAGC,YAC5BA,EAAOO,KAAM,mCAAmCzE,IAGlD,OAAOmE,eAAkBH,GAGpB,SAASuO,EAAmB1T,EAAO2T,GACxC,MAAMF,EAAgBrH,iBAChBwH,EAAmBD,EAAgB,eAAcA,EAAiB,GACxE,MAAQ,GAAEF,2BAAuCzT,IAAQ4T,IAGpD,SAASxR,EACdD,EACAb,EACAC,EACAgL,GAEA,OAAOD,eAAqBnK,EAAcb,EAAQC,EAAWgL,K,kCCvG/D,oE,qBCCA7V,EAAOD,QAAU,CAAC,gBAAgB","file":"js/app.279a53f3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"404\":\"404\",\"admin\":\"admin\",\"clusters~jobs\":\"clusters~jobs\",\"clusters~login\":\"clusters~login\",\"clusters\":\"clusters\",\"jobs\":\"jobs\",\"login\":\"login\",\"help\":\"help\",\"summary\":\"summary\"}[chunkId]||chunkId) + \".\" + {\"404\":\"56bd4237\",\"admin\":\"605daba7\",\"clusters~jobs\":\"0ba218a6\",\"clusters~login\":\"b34895c1\",\"clusters\":\"b4119b18\",\"jobs\":\"6d7ef2e1\",\"login\":\"b8412a64\",\"help\":\"22689b84\",\"summary\":\"cf60beac\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"clusters~jobs\":1,\"clusters\":1,\"jobs\":1,\"login\":1,\"help\":1,\"summary\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"404\":\"404\",\"admin\":\"admin\",\"clusters~jobs\":\"clusters~jobs\",\"clusters~login\":\"clusters~login\",\"clusters\":\"clusters\",\"jobs\":\"jobs\",\"login\":\"login\",\"help\":\"help\",\"summary\":\"summary\"}[chunkId]||chunkId) + \".\" + {\"404\":\"31d6cfe0\",\"admin\":\"31d6cfe0\",\"clusters~jobs\":\"ad79ac2c\",\"clusters~login\":\"31d6cfe0\",\"clusters\":\"ee375f77\",\"jobs\":\"c78647b3\",\"login\":\"60cbb79d\",\"help\":\"50300143\",\"summary\":\"3a2f308c\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/mantis-ui/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app_3cl75\",\"error-alert\":\"App_error-alert_3ss0U\"};","const USER_NAME_KEY = 'mantisUserName';\nconst USER_EMAIL_KEY = 'mantisUserEmail';\nconst MANTIS_MASTERS_KEY = 'mantisMasters';\nconst MESOS_URL_KEY = 'mesosUrl';\n\nexport function getUserName() {\n  return localStorage.getItem(USER_NAME_KEY);\n}\n\nexport function getUserEmail() {\n  return localStorage.getItem(USER_EMAIL_KEY);\n}\n\nexport function getMantisMasters() {\n  const mastersString = localStorage.getItem(MANTIS_MASTERS_KEY);\n  try {\n    return JSON.parse(mastersString);\n  } catch (e) {\n    return [];\n  }\n}\n\nexport function getMesosUrl() {\n  return localStorage.getItem(MESOS_URL_KEY);\n}\n\nexport function setUserName(userName) {\n  return localStorage.setItem(USER_NAME_KEY, userName ? userName : '');\n}\n\nexport function setUserEmail(userEmail) {\n  return localStorage.setItem(USER_EMAIL_KEY, userEmail ? userEmail : '');\n}\n\nexport function setMantisMasters(masters) {\n  return localStorage.setItem(MANTIS_MASTERS_KEY, JSON.stringify(masters));\n}\n\nexport function setMesosUrl(mesosUrl) {\n  return localStorage.setItem(MESOS_URL_KEY, mesosUrl);\n}\n","export function isEmpty(str) {\n  return !str || str.length === 0;\n}\n","import { isEmpty } from '@/utils/string';\nimport { ActionTypes } from '@/store/actions';\nimport { setUserEmail, setUserName } from '@/utils/local-storage';\n\n// mutation types\nconst LOGIN_USER = 'LOGIN_USER';\nconst LOGOUT_USER = 'LOGOUT_USER';\n\n// initial state\nconst initialState = {\n  name: '',\n  email: '',\n};\n\n// getters\nconst getters = {\n  loggedIn: state => {\n    return !isEmpty(state.name) && !isEmpty(state.email);\n  },\n};\n\n// actions\nconst actions = {\n  [ActionTypes.LoginUser]({ commit }, { name, email }) {\n    setUserName(name);\n    setUserEmail(email);\n    commit(LOGIN_USER, { name, email });\n  },\n  [ActionTypes.LogoutUser]({ commit }) {\n    setUserName('');\n    setUserEmail('');\n    commit(LOGOUT_USER);\n  },\n};\n\n// mutations\nconst mutations = {\n  [LOGIN_USER](state, { name, email }) {\n    state.name = name;\n    state.email = email;\n  },\n  [LOGOUT_USER](state) {\n    state.name = '';\n    state.email = '';\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import {\n  fetchJobArchivedWorkers,\n  fetchJobDetails,\n  killJobs,\n  quickSubmitJob,\n  resubmitWorker,\n  scaleJobStage,\n  streamJobOutput,\n  streamJobStatus,\n} from '@/services/JobsService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst FETCH_JOB_DETAILS = 'FETCH_JOB_DETAILS';\nconst FETCH_ARCHIVED_WORKERS_FOR_JOB = 'FETCH_ARCHIVED_WORKERS_FOR_JOB';\nconst FETCH_JOB_OUTPUT_EVENTS = 'FETCH_JOB_OUTPUT_EVENTS';\nconst FETCH_JOB_STATUS_EVENTS = 'FETCH_JOB_STATUS_EVENTS';\nconst SET_SELECTED_JOB = 'SET_SELECTED_JOB';\nconst SET_ARCHIVED_WORKERS_FOR_JOB = 'SET_ARCHIVED_WORKERS_FOR_JOB';\nconst SET_JOB_STATUS_EVENTS = 'SET_JOB_STATUS_EVENTS';\nconst SET_JOB_STATUS_SSE = 'SET_JOB_STATUS_SSE';\nconst SET_JOB_OUTPUT_EVENTS = 'SET_JOB_OUTPUT_EVENTS';\nconst SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED = 'SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED';\nconst SET_JOB_OUTPUT_SSE = 'SET_JOB_OUTPUT_SSE';\nconst CLEAR_JOB_OUTPUT_EVENTS = 'CLEAR_JOB_OUTPUT_EVENTS';\nconst STOP_JOB_OUTPUT_SSE = 'STOP_JOB_OUTPUT_SSE';\nconst UPDATE_RPS = 'UPDATE_RPS';\nconst RESET_JOB_DETAILS = 'RESET_JOB_DETAILS';\n\n// initial state\nconst initialState = {\n  selectedJob: null,\n  archivedWorkers: [],\n  isLoadingJobDetails: false,\n  isFetchingArchivedWorkers: false,\n  jobStatusEvents: [],\n  jobOutputEvents: [],\n  hasJobStatusStarted: false,\n  hasJobOutputStarted: false,\n  currentJobOutputMessagePrettyPrinted: '',\n  rpsPrettyPrintThreshold: 50,\n  jobOutputSse: null,\n  jobStatusSse: null,\n  maxJobOutputLength: 200,\n  rps: 0,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchJobDetails]({ commit, dispatch }, { jobId }) {\n    commit(FETCH_JOB_DETAILS);\n    const { data, errors } = await fetchJobDetails(jobId);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_SELECTED_JOB, data);\n  },\n\n  async [ActionTypes.FetchArchivedWorkersForJob](\n    { commit, dispatch },\n    { jobId },\n  ) {\n    commit(FETCH_ARCHIVED_WORKERS_FOR_JOB);\n    const { data = {}, errors } = await fetchJobArchivedWorkers(jobId);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_ARCHIVED_WORKERS_FOR_JOB, data);\n  },\n\n  async [ActionTypes.ResubmitWorker]({ rootState }, { jobId, workerNumber }) {\n    const userEmail = rootState.user.email;\n    return resubmitWorker(jobId, workerNumber, userEmail);\n  },\n\n  async [ActionTypes.ScaleJobStage]({ rootState }, { jobId, stageNumber, numWorkers }) {\n    const userEmail = rootState.user.email;\n    return scaleJobStage(jobId, stageNumber, numWorkers, userEmail);\n  },\n\n  async [ActionTypes.KillJobs]({ dispatch, rootState }, { jobIds = [] }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await killJobs(jobIds, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n\n  async [ActionTypes.QuickSubmitJob]({ dispatch }, { jobConfig }) {\n    const { data, errors } = await quickSubmitJob(jobConfig);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n\n  [ActionTypes.StreamJobStatus]({ commit }, { jobId }) {\n    const onOpen = () => {\n      commit(FETCH_JOB_STATUS_EVENTS);\n    };\n\n    const onMessage = e => {\n      let record = {};\n      try {\n        record = JSON.parse(e.data);\n      } catch (e) {\n        console.debug(`StreamJobStatus: Unable to parse record ${e} as json`);\n      }\n      const item = {\n        timestamp: record ? record.status.timestamp : new Date().getTime(),\n        message: record ? record.status.message : '',\n        stageNum: record ? record.status.stageNum : 'N/A',\n        state: record ? record.status.state : 'N/A',\n      };\n      commit(SET_JOB_STATUS_EVENTS, { item });\n    };\n\n    const sse = streamJobStatus(jobId, onOpen, onMessage);\n    commit(SET_JOB_STATUS_SSE, { sse });\n  },\n\n  [ActionTypes.StreamJobOutput]({ commit }, { jobOutputUrl }) {\n    const onOpen = () => {\n      commit(FETCH_JOB_OUTPUT_EVENTS);\n    };\n\n    const onMessage = e => {\n      const item = {\n        timestamp: new Date().getTime(),\n        message: e.data,\n      };\n      commit(SET_JOB_OUTPUT_EVENTS, { item });\n      commit(UPDATE_RPS);\n      commit(SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED, { item });\n    };\n    const sse = streamJobOutput(jobOutputUrl, onOpen, onMessage);\n    commit(SET_JOB_OUTPUT_SSE, { sse });\n  },\n\n  [ActionTypes.ClearJobOutput]({ commit }) {\n    commit(CLEAR_JOB_OUTPUT_EVENTS);\n  },\n\n  [ActionTypes.StopJobOutputStream]({ commit }) {\n    commit(STOP_JOB_OUTPUT_SSE);\n  },\n\n  [ActionTypes.ResetJobDetails]({ commit }) {\n    commit(STOP_JOB_OUTPUT_SSE);\n    commit(RESET_JOB_DETAILS);\n  },\n\n  [ActionTypes.UpdateCurrentJobOutputMessagePreview]({ commit }, { item }) {\n    commit(SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED, { item });\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_JOB_DETAILS](state) {\n    state.isLoadingJobDetails = true;\n  },\n\n  [FETCH_ARCHIVED_WORKERS_FOR_JOB](state) {\n    state.isFetchingArchivedWorkers = true;\n  },\n\n  [SET_SELECTED_JOB](state, job) {\n    state.selectedJob = job;\n    state.isLoadingJobDetails = false;\n  },\n\n  [SET_ARCHIVED_WORKERS_FOR_JOB](state, { list = [] }) {\n    state.archivedWorkers = list;\n    state.isFetchingArchivedWorkers = false;\n  },\n\n  [FETCH_JOB_STATUS_EVENTS](state) {\n    state.hasJobStatusStarted = true;\n  },\n\n  [SET_JOB_STATUS_EVENTS](state, { item }) {\n    state.jobStatusEvents = [item, ...state.jobStatusEvents];\n  },\n\n  [SET_JOB_STATUS_SSE](state, { sse }) {\n    state.jobStatusSse = sse;\n  },\n\n  [FETCH_JOB_OUTPUT_EVENTS](state) {\n    state.hasJobOutputStarted = true;\n  },\n\n  [SET_JOB_OUTPUT_EVENTS](state, { item }) {\n    const events = state.jobOutputEvents;\n    const tail = ([, ...xs]) => xs;\n\n    if (events.length > state.maxJobOutputLength) {\n      state.jobOutputEvents = [item, ...tail(events)];\n    } else {\n      state.jobOutputEvents = [item, ...state.jobOutputEvents];\n    }\n  },\n\n  [SET_JOB_OUTPUT_ITEM_PRETTY_PRINTED](state, { item }) {\n    if (state.rps !== 'Infinity' && state.rps >= state.rpsPrettyPrintThreshold) {\n      return;\n    }\n\n    try {\n      const obj = JSON.parse(item.message);\n      state.currentJobOutputMessagePrettyPrinted = JSON.stringify(obj, undefined, 2);\n    } catch (e) {\n      console.debug(`Error: Unable to pretty print job output message due to ${e}`);\n      state.currentJobOutputMessagePrettyPrinted = 'Unable to pretty print job output message.'\n    }\n  },\n\n  [UPDATE_RPS](state) {\n    const events = state.jobOutputEvents;\n    const diff = Math.abs(events[0].timestamp - events[events.length - 1].timestamp);\n    const rps = (events.length / (diff / 1000)).toFixed(2);\n    state.rps = new Number(rps);\n  },\n\n  [SET_JOB_OUTPUT_SSE](state, { sse }) {\n    state.jobOutputSse = sse;\n  },\n\n  [CLEAR_JOB_OUTPUT_EVENTS](state) {\n    state.jobOutputEvents = [];\n  },\n\n  [STOP_JOB_OUTPUT_SSE](state) {\n    const sse = state.jobOutputSse;\n    if (sse) {\n      sse.close();\n    }\n    state.rps = 0;\n    state.jobOutputSse = null;\n    state.hasJobOutputStarted = false;\n  },\n\n  [RESET_JOB_DETAILS](state) {\n    state.jobStatusSse = null;\n    state.selectedJob = null;\n    state.archivedWorkers = [];\n    state.jobStatusEvents = [];\n    state.jobOutputEvents = [];\n    state.currentJobOutputMessagePrettyPrinted = '';\n    state.rps = 0;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import { fetchJobs } from '@/services/JobsService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst SET_PAGE_SIZE = 'SET_PAGE_SIZE';\nconst SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\nconst FETCH_ALL_JOBS = 'FETCH_ALL_JOBS';\nconst SET_JOBS_LIST = 'SET_JOBS_LIST';\nconst SET_TOTAL_RESOURCES = 'SET_TOTAL_RESOURCES';\n\n// initial state\nconst initialState = {\n  list: [],\n  pageSize: 15,\n  pageNumber: 1,\n  isLoadingList: false,\n  totalResources: {\n    cpu: 0,\n    memory: 0,\n  },\n  total: 0,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchJobs](\n    { commit, state, dispatch },\n    { searchText, labelFilterText } = {},\n  ) {\n    const offset = state.pageSize * (state.pageNumber - 1);\n    commit(FETCH_ALL_JOBS);\n    const { data = {}, errors } = await fetchJobs(\n      state.pageSize,\n      offset,\n      searchText,\n      labelFilterText,\n    );\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_JOBS_LIST, data);\n    commit(SET_TOTAL_RESOURCES, data);\n  },\n\n  [ActionTypes.UpdateJobsTablePageSize]({ commit }, { size = 15 }) {\n    commit(SET_PAGE_SIZE, size);\n  },\n\n  [ActionTypes.UpdateJobsTablePageNumber]({ commit }, { pageNumber = 1 }) {\n    commit(SET_PAGE_NUMBER, pageNumber);\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_ALL_JOBS](state) {\n    state.isLoadingList = true;\n  },\n\n  [SET_PAGE_SIZE](state, size) {\n    state.pageSize = size;\n  },\n\n  [SET_PAGE_NUMBER](state, pageNumber) {\n    state.pageNumber = pageNumber;\n  },\n\n  [SET_JOBS_LIST](state, { list = [], total = 0 }) {\n    state.list = list;\n    state.total = total;\n    state.isLoadingList = false;\n  },\n\n  [SET_TOTAL_RESOURCES](state, { list = [] }) {\n    let cpu = 0;\n    let memory = 0;\n    list.forEach(item => {\n      cpu += item.totCPUs;\n      memory = item.totMemory;\n    });\n    state.totalResources = {\n      cpu,\n      memory,\n    };\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import {\n  findClientByRegion,\n  getClientsForAllRegions,\n  handleApiRequests,\n} from './BaseService';\n\nexport async function fetchJobClusters(\n  pageSize = 15,\n  offset = 0,\n  searchString = '',\n  labelFilterString = '',\n) {\n  const clients = getClientsForAllRegions();\n  let queryString = searchString\n    ? `&matching=.*${searchString}.*`\n    : '';\n  queryString += labelFilterString ? `&labels=${labelFilterString}` : '';\n\n  let requests = clients.map(({ client }) =>\n    client.get(\n      `/api/v1/jobClusters/?pageSize=${pageSize}&offset=${offset}&sortBy=name&compact=true${queryString}`,\n    ),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function fetchJobClusterDetails(clusterId) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.get(`/api/v1/jobClusters/${clusterId}`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function fetchJobsForCluster(clusterId) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.get(`/api/v1/jobClusters/${clusterId}/jobs`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function createJobCluster(jobCluster) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters`, jobCluster),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterStandard(clusterId, clusterConfig) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.put(`/api/v1/jobClusters/${clusterId}`, clusterConfig),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterQuickArtifact(clusterId, artifactConfig, userEmail) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/actions/updateArtifact`, {\n      name: clusterId,\n      user: userEmail,\n      ...artifactConfig,\n    }),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterQuickSla(clusterId, slaConfig, userEmail) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/actions/updateSla`, {\n      name: clusterId,\n      user: userEmail,\n      ...slaConfig,\n    }),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterQuickMigrationStrategy(clusterId, migrationConfig, userEmail) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/actions/updateMigrationStrategy`, {\n      name: clusterId,\n      user: userEmail,\n      ...migrationConfig,\n    }),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function updateJobClusterQuickLabel(clusterId, labels, userEmail) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/actions/updateLabel`, {\n      name: clusterId,\n      user: userEmail,\n      labels,\n    }),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function submitJobForCluster(clusterId, jobConfig) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobClusters/${clusterId}/jobs`, jobConfig),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function enableJobCluster(clusterId, userEmail) {\n  const { client } = findClientByRegion();\n  let request = client.post(`/api/v1/jobClusters/${clusterId}/actions/enableCluster`, {\n    user: userEmail,\n    name: clusterId,\n  });\n\n  return handleApiRequests([request]);\n}\n\nexport async function disableJobCluster(clusterId, userEmail) {\n  const { client } = findClientByRegion();\n  let request = client.post(`/api/v1/jobClusters/${clusterId}/actions/disableCluster`, {\n    user: userEmail,\n    name: clusterId,\n  });\n\n  return handleApiRequests([request]);\n}\n\nexport async function deleteJobCluster(clusterId, userEmail) {\n  const { client } = findClientByRegion();\n  let request = client.delete(`/api/v1/jobClusters/${clusterId}?user=${userEmail}`);\n\n  return handleApiRequests([request]);\n}\n","import {\n  createJobCluster,\n  deleteJobCluster,\n  disableJobCluster,\n  enableJobCluster,\n  fetchJobClusterDetails,\n  fetchJobsForCluster,\n  submitJobForCluster,\n  updateJobClusterQuickArtifact,\n  updateJobClusterQuickLabel,\n  updateJobClusterQuickMigrationStrategy,\n  updateJobClusterQuickSla,\n  updateJobClusterStandard,\n} from '@/services/JobClustersService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst FETCH_JOB_CLUSTER_DETAILS = 'FETCH_JOB_CLUSTER_DETAILS';\nconst SET_SELECTED_JOB_CLUSTER = 'SET_SELECTED_JOB_CLUSTER';\nconst FETCH_JOB_CLUSTER_JOBS = 'FETCH_JOB_CLUSTER_JOBS';\nconst SET_JOBS_FOR_SELECTED_JOB_CLUSTER = 'SET_JOBS_FOR_SELECTED_JOB_CLUSTER';\n\n// initial state\nconst initialState = {\n  selectedJobCluster: null,\n  jobsForSelectedJobCluster: [],\n  isLoadingJobClusterDetails: false,\n  isLoadingJobClusterJobs: false,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.CreateJobCluster]({ dispatch }, { jobCluster }) {\n    const { data, errors } = await createJobCluster(jobCluster);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterStandard]({ dispatch }, { clusterId, jobCluster }) {\n    const { data, errors } = await updateJobClusterStandard(clusterId, jobCluster);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterQuickArtifact]({ rootState, dispatch }, { clusterId, artifactConfig }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await updateJobClusterQuickArtifact(clusterId, artifactConfig, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterQuickSla]({ rootState, dispatch }, { clusterId, slaConfig }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await updateJobClusterQuickSla(clusterId, slaConfig, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterQuickMigrationStrategy]({ rootState, dispatch }, { clusterId, migrationConfig }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await updateJobClusterQuickMigrationStrategy(clusterId, migrationConfig, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.UpdateJobClusterQuickLabel]({ rootState, dispatch }, { clusterId, labels }) {\n    const userEmail = rootState.user.email;\n    const { data, errors } = await updateJobClusterQuickLabel(clusterId, labels, userEmail);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n  async [ActionTypes.FetchJobClusterDetails](\n    { commit, dispatch },\n    { clusterId },\n  ) {\n    commit(FETCH_JOB_CLUSTER_DETAILS);\n    const { data, errors } = await fetchJobClusterDetails(clusterId);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_SELECTED_JOB_CLUSTER, data);\n  },\n  async [ActionTypes.FetchJobClusterJobs]({ commit, dispatch }, { clusterId }) {\n    commit(FETCH_JOB_CLUSTER_JOBS);\n    const { data, errors } = await fetchJobsForCluster(clusterId);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_JOBS_FOR_SELECTED_JOB_CLUSTER, data);\n  },\n  async [ActionTypes.EnableJobCluster]({ rootState }, { clusterId }) {\n    const userEmail = rootState.user.email;\n    return enableJobCluster(clusterId, userEmail);\n  },\n  async [ActionTypes.DisableJobCluster]({ rootState }, { clusterId }) {\n    const userEmail = rootState.user.email;\n    return disableJobCluster(clusterId, userEmail);\n  },\n  async [ActionTypes.DeleteJobCluster]({ rootState }, { clusterId }) {\n    const userEmail = rootState.user.email;\n    return deleteJobCluster(clusterId, userEmail);\n  },\n  async [ActionTypes.SubmitJobForCluster]({ dispatch }, { clusterId, jobConfig }) {\n    const { data, errors } = await submitJobForCluster(clusterId, jobConfig);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return { data, errors };\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_JOB_CLUSTER_DETAILS](state) {\n    state.isLoadingJobClusterDetails = true;\n  },\n\n  [FETCH_JOB_CLUSTER_JOBS](state) {\n    state.isLoadingJobClusterJobs = true;\n  },\n\n  [SET_SELECTED_JOB_CLUSTER](state, jobCluster) {\n    state.selectedJobCluster = jobCluster;\n    state.isLoadingJobClusterDetails = false;\n  },\n\n  [SET_JOBS_FOR_SELECTED_JOB_CLUSTER](state, { list }) {\n    state.jobsForSelectedJobCluster = list;\n    state.isLoadingJobClusterJobs = false;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import { fetchJobClusters } from '@/services/JobClustersService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst SET_PAGE_SIZE = 'SET_PAGE_SIZE';\nconst SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\nconst FETCH_ALL_JOB_CLUSTERS = 'FETCH_ALL_JOBS';\nconst SET_JOB_CLUSTERS_LIST = 'SET_JOBS_LIST';\n\n// initial state\nconst initialState = {\n  list: [],\n  pageSize: 15,\n  pageNumber: 1,\n  isLoadingList: false,\n  total: 0,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchJobClusters](\n    { commit, state, dispatch },\n    { searchText, labelFilterText } = {},\n  ) {\n    const offset = state.pageSize * (state.pageNumber - 1);\n    commit(FETCH_ALL_JOB_CLUSTERS);\n    const { data = {}, errors } = await fetchJobClusters(\n      state.pageSize,\n      offset,\n      searchText,\n      labelFilterText,\n    );\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_JOB_CLUSTERS_LIST, data);\n  },\n\n  [ActionTypes.UpdateClusterTablePageSize]({ commit }, { size = 15 }) {\n    commit(SET_PAGE_SIZE, size);\n  },\n\n  [ActionTypes.UpdateClusterTablePageNumber]({ commit }, { pageNumber = 1 }) {\n    commit(SET_PAGE_NUMBER, pageNumber);\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_ALL_JOB_CLUSTERS](state) {\n    state.isLoadingList = true;\n  },\n\n  [SET_PAGE_SIZE](state, size) {\n    state.pageSize = size;\n  },\n\n  [SET_PAGE_NUMBER](state, pageNumber) {\n    state.pageNumber = pageNumber;\n  },\n\n  [SET_JOB_CLUSTERS_LIST](state, { list = [], total = 0 }) {\n    state.list = list;\n    state.isLoadingList = false;\n    state.total = total;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import {\n  getClientsForAllRegions,\n  getServiceResponseErrors,\n} from './BaseService';\nimport pSettle from 'p-settle';\n\nexport async function fetchMasterConfigs() {\n  const clients = getClientsForAllRegions();\n\n  let requests = clients.map(({ client }) =>\n    client.get('/api/v1/masterConfigs'),\n  );\n\n  let responses = await pSettle(requests);\n  const dataReponses = responses.map(response => {\n    if (response.isFulfilled) {\n      return { data: response.value.data };\n    }\n    return { errors: getServiceResponseErrors(response.reason.response) };\n  });\n  return dataReponses[0];\n}\n","import { ActionTypes } from '@/store/actions';\nimport { fetchMasterConfigs } from '@/services/MasterService';\nimport { setMantisMasters, setMesosUrl } from '@/utils/local-storage';\n\n// mutation types\nconst SET_MANTIS_MASTERS = 'SET_MANTIS_MASTERS';\nconst ADD_GLOBAL_ERRORS = 'ADD_GLOBAL_ERROR';\nconst SET_MESOS_URL = 'SET_MESOS_URL';\nconst SET_MANTIS_MASTER_CONFIGS = 'SET_MANTIS_MASTER_CONFIGS';\n\n// initial state\nconst initialState = {\n  mantisMasters: [],\n  globalErrors: [],\n  mesosUrl: '',\n  masterConfigs: [],\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  [ActionTypes.SetMantisMasters]({ commit }, mantisMasters = []) {\n    setMantisMasters(mantisMasters);\n    commit(SET_MANTIS_MASTERS, mantisMasters);\n  },\n  [ActionTypes.SetMesosUrl]({ commit }, mesosUrl) {\n    setMesosUrl(mesosUrl);\n    commit(SET_MESOS_URL, mesosUrl);\n  },\n  [ActionTypes.AddGlobalErrors]({ commit }, errors = []) {\n    commit(ADD_GLOBAL_ERRORS, errors);\n  },\n  async [ActionTypes.FetchMasterConfigs]({ commit, dispatch }) {\n    const { data = {}, errors } = await fetchMasterConfigs();\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_MANTIS_MASTER_CONFIGS, data);\n  },\n};\n\n// mutations\nconst mutations = {\n  [SET_MANTIS_MASTERS](state, mantisMasters) {\n    state.mantisMasters = mantisMasters;\n  },\n  [ADD_GLOBAL_ERRORS](state, errors) {\n    state.globalErrors = [...state.globalErrors, ...errors];\n  },\n  [SET_MESOS_URL](state, mesosUrl) {\n    state.mesosUrl = mesosUrl;\n  },\n  [SET_MANTIS_MASTER_CONFIGS](state, list) {\n    state.masterConfigs = list;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import {\n  findClientByRegion,\n  handleApiRequests,\n} from './BaseService';\n\nexport async function fetchArtifactNames() {\n  const { client } = findClientByRegion();\n\n  const request = client.get(\n    `/api/v1/artifacts`,\n  );\n\n  return handleApiRequests([request]);\n}\n\nexport async function fetchArtifactProperties(artifactLocation) {\n  const { client } = findClientByRegion();\n  const artifactName = artifactLocation.split(\"/\").pop().replace(/\\.(jar|zip)$/, '.json');\n\n  const request = client.get(\n    `/api/v1/artifacts/${artifactName}`,\n  );\n\n  return handleApiRequests([request]);\n}\n\nexport async function uploadArtifact(file) {\n  const { client } = findClientByRegion();\n\n  const formData = new FormData();\n  formData.append('file', file);\n\n  const request = client.post(\n    `/api/v1/artifacts`,\n    formData,\n  )\n\n  return handleApiRequests([request]);\n}\n","import {\n  fetchArtifactProperties,\n  uploadArtifact,\n} from '@/services/ArtifactService';\nimport { ActionTypes } from '@/store/actions';\n\n// mutation types\nconst FETCH_ARTIFACT_JSON = 'FETCH_ARTIFACT_JSON';\nconst SET_SELECTED_ARTIFACT = 'SET_SELECTED_ARTIFACT';\nconst SET_SELECTED_ARTIFACT_PROPERTIES = 'SET_SELECTED_ARTIFACT_PROPERTIES';\n\n// initial state\nconst initialState = {\n  selectedArtifact: null,\n  isLoadingArtifactProperties: false,\n  selectedArtifactPropertiesJson: null,\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchJobArtifact]({ commit, dispatch }, { artifactName }) {\n    commit(FETCH_ARTIFACT_JSON);\n    const { data, errors } = await fetchArtifactProperties(artifactName);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_SELECTED_ARTIFACT_PROPERTIES, data);\n    commit(SET_SELECTED_ARTIFACT, { artifactName });\n  },\n  async [ActionTypes.UploadArtifact]({}, { file }) {\n    const { data, errors } = await uploadArtifact(file);\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    return data;\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_ARTIFACT_JSON](state) {\n    state.isLoadingArtifactProperties = true;\n  },\n  [SET_SELECTED_ARTIFACT](state, { artifactName }) {\n    state.selectedArtifact = artifactName;\n  },\n  [SET_SELECTED_ARTIFACT_PROPERTIES](state, artifactPropertiesJson) {\n    state.selectedArtifactPropertiesJson = artifactPropertiesJson;\n    state.isLoadingArtifactProperties = false;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import { ActionTypes } from '@/store/actions';\nimport { fetchArtifactNames  } from '@/services/ArtifactService';\n\n// mutation types\nconst FETCH_ARTIFACTS_LIST = 'FETCH_ARTIFACTS_LIST';\nconst SET_ARTIFACTS_LIST = 'SET_ARTIFACTS_LIST';\n\n// initial state\nconst initialState = {\n  isLoadingArtifactsList: false,\n  artifactNames: [],\n};\n\n// getters\nconst getters = {};\n\n// actions\nconst actions = {\n  async [ActionTypes.FetchArtifacts]({ commit, dispatch }) {\n    commit(FETCH_ARTIFACTS_LIST);\n    const { data, errors } = await fetchArtifactNames();\n    if (errors) {\n      dispatch(ActionTypes.AddGlobalErrors, errors);\n    }\n    commit(SET_ARTIFACTS_LIST, data);\n  },\n};\n\n// mutations\nconst mutations = {\n  [FETCH_ARTIFACTS_LIST](state) {\n    state.isLoadingArtifactsList = true;\n  },\n  [SET_ARTIFACTS_LIST](state, list = []) {\n    state.artifactNames = list;\n    state.isLoadingArtifactsList = false;\n  },\n};\n\nexport default {\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport user from '@/store/modules/User';\nimport job from '@/store/modules/Job';\nimport jobs from '@/store/modules/Jobs';\nimport jobCluster from '@/store/modules/JobCluster';\nimport jobClusters from '@/store/modules/JobClusters';\nimport metadata from '@/store/modules/Metadata';\nimport artifact from '@/store/modules/Artifact';\nimport artifacts from '@/store/modules/Artifacts';\n\nVue.use(Vuex);\nconst isDebug = process.env.NODE_ENV !== 'production';\n\nexport default new Vuex.Store({\n  modules: {\n    user,\n    job,\n    jobs,\n    jobCluster,\n    jobClusters,\n    metadata,\n    artifact,\n    artifacts,\n  },\n  strict: isDebug,\n});\n","import axios from 'axios';\nimport store from '@/store';\nimport pSettle from 'p-settle';\n\nexport function getClientsForAllRegions() {\n  const masters = store.state.metadata.mantisMasters;\n  return masters.map(master => ({\n    name: master.name,\n    client: axios.create({\n      baseURL: master.url,\n    }),\n  }));\n}\n\n// For now only single region is supported, we will only use first mantis master.\nexport function findClientByRegion() {\n  const master = store.state.metadata.mantisMasters[0];\n  return {\n    name: master.name,\n    client: axios.create({\n      baseURL: master.url,\n    }),\n  };\n}\n\n// For now only single region is supported, we will only use first mantis master.\nexport function findMantisApiUrlByRegion() {\n  const master = store.state.metadata.mantisMasters[0];\n  return master.url;\n}\n\nexport async function handleApiRequests(requests) {\n  let responses = await pSettle(requests);\n  const dataReponses = responses.map(response => {\n    if (response.isFulfilled) {\n      return { data: response.value.data };\n    }\n    return { errors: getServiceResponseErrors(response.reason.response) };\n  });\n  return dataReponses[0];\n}\n\nexport function getServiceResponseErrors(response) {\n  if (response && response.status === 404) {\n    return [\n      {\n        code: 1,\n        message: `The requested resource (${\n          response.request.responseURL\n        }) could not be found.`,\n      },\n    ];\n  } else if (response && response.data) {\n    return [response.data];\n  }\n  return [{ code: 2, message: 'Request failed with an unexpected error.' }];\n}\n\nexport function createSseEventSource(url, onOpen, onMessage, onError) {\n  const eventSource = new EventSource(url);\n  eventSource.onopen = onOpen;\n  eventSource.onmessage = onMessage;\n  eventSource.onerror = onError;\n  return eventSource;\n}\n\nexport function createWebsocket(url, onOpen, onMessage, onError, onClose) {\n  const connection = new WebSocket(url);\n  connection.onopen = onOpen;\n  connection.onmessage = onMessage;\n  connection.onerror = onError;\n  connection.onclose = onClose;\n  return connection;\n}\n","import Vue from 'vue';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faAngleLeft,\n  faArrowDown,\n  faArrowsAltH,\n  faBolt,\n  faClipboard,\n  faClock,\n  faCog,\n  faRocket,\n  faSitemap,\n  faSlidersH,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\nexport default () => {\n  library.add(\n    faRocket,\n    faSitemap,\n    faClock,\n    faBolt,\n    faCog,\n    faArrowsAltH,\n    faArrowDown,\n    faAngleLeft,\n    faClipboard,\n    faSlidersH,\n  );\n  Vue.component('font-awesome-icon', FontAwesomeIcon);\n}\n\n","import Vue from 'vue';\nimport {\n  Loading,\n  Message,\n  MessageBox,\n} from 'element-ui';\nimport lang from 'element-ui/lib/locale/lang/en';\nimport locale from 'element-ui/lib/locale';\nimport 'element-ui/lib/theme-chalk/index.css';\n\nexport default () => {\n  Vue.use(Loading.directive);\n  locale.use(lang);\n\n  Vue.prototype.$ELEMENT = {\n    size: 'small',\n    zIndex: 2000,\n  };\n  Vue.prototype.$loading = Loading.service;\n  Vue.prototype.$confirm = MessageBox.confirm;\n  Vue.prototype.$message = Message;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":_vm.$style.app}},[_c('el-container',{attrs:{\"direction\":\"vertical\"}},[(_vm.loggedIn)?_c('TopNav',{staticClass:\"stretch-x\",attrs:{\"user-name\":_vm.userName},on:{\"on-click-logout\":_vm.logout}}):_vm._e(),_c('el-main',[_vm._l((_vm.errorMessages),function(message){return _c('el-alert',{key:message,class:_vm.$style['error-alert'],attrs:{\"title\":message,\"type\":\"error\"}})}),_c('router-view')],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-menu',{staticClass:\"top-nav\",attrs:{\"default-active\":_vm.activeLink,\"mode\":\"horizontal\",\"background-color\":_vm.backgroundColor,\"text-color\":_vm.textColor,\"active-text-color\":_vm.activeTextColor,\"unique-opened\":\"\",\"router\":\"\"}},[_c('el-menu-item',{attrs:{\"index\":\"/\"}},[_c('h1',[_vm._v(\"Mantis\")])]),_c('el-menu-item',{attrs:{\"index\":\"/clusters\"}},[_c('template',{slot:\"title\"},[_vm._v(\"\\n      Clusters\\n    \")])],2),_c('el-menu-item',{attrs:{\"index\":\"/jobs\"}},[_c('template',{slot:\"title\"},[_vm._v(\"\\n      Jobs\\n    \")])],2),_c('el-menu-item',{attrs:{\"index\":\"/help\"}},[_c('template',{slot:\"title\"},[_vm._v(\"\\n      Help\\n    \")])],2),_c('el-submenu',{class:_vm.$style['user-controls'],attrs:{\"index\":\"/settings\"}},[_c('template',{slot:\"title\"},[_vm._v(\"\\n      \"+_vm._s(_vm.userName)+\"\\n    \")]),_c('el-menu-item',{on:{\"click\":_vm.handleLogout}},[_vm._v(\"\\n      Logout\\n    \")])],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-menu\n    :default-active=\"activeLink\"\n    class=\"top-nav\"\n    mode=\"horizontal\"\n    :background-color=\"backgroundColor\"\n    :text-color=\"textColor\"\n    :active-text-color=\"activeTextColor\"\n    unique-opened\n    router\n  >\n    <el-menu-item index=\"/\">\n      <h1>Mantis</h1>\n    </el-menu-item>\n\n    <el-menu-item index=\"/clusters\">\n      <template slot=\"title\">\n        Clusters\n      </template>\n    </el-menu-item>\n\n    <el-menu-item index=\"/jobs\">\n      <template slot=\"title\">\n        Jobs\n      </template>\n    </el-menu-item>\n\n    <el-menu-item index=\"/help\">\n      <template slot=\"title\">\n        Help\n      </template>\n    </el-menu-item>\n\n    <el-submenu :class=\"$style['user-controls']\" index=\"/settings\">\n      <template slot=\"title\">\n        {{ userName }}\n      </template>\n      <el-menu-item @click=\"handleLogout\">\n        Logout\n      </el-menu-item>\n    </el-submenu>\n  </el-menu>\n</template>\n\n<script>\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { Menu, MenuItem, Submenu } from 'element-ui';\n\nexport default {\n  name: 'TopNav',\n\n  components: {\n    [Menu.name]: Menu,\n    [MenuItem.name]: MenuItem,\n    [Submenu.name]: Submenu,\n  },\n\n  props: {\n    userName: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      faBars,\n      backgroundColor: '#800000',\n      textColor: 'white',\n      activeTextColor: getComputedStyle(\n        document.documentElement,\n      ).getPropertyValue('--yellow-500'),\n    };\n  },\n\n  computed: {\n    activeLink: function() {\n      return `/${this.$route.path.split('/')[1]}`;\n    },\n  },\n\n  methods: {\n    handleLogout() {\n      this.$emit('on-click-logout');\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" module>\n.user-controls {\n  float: right !important;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNav.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNav.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TopNav.vue?vue&type=template&id=5041ec45&\"\nimport script from \"./TopNav.vue?vue&type=script&lang=js&\"\nexport * from \"./TopNav.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TopNav.vue?vue&type=style&index=0&lang=scss&module=true&\"\n\n\n\n\nfunction injectStyles (context) {\n  \n  this[\"$style\"] = (style0.locals || style0)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div :id=\"$style.app\">\n    <el-container direction=\"vertical\">\n      <TopNav v-if=\"loggedIn\" class=\"stretch-x\" :user-name=\"userName\" @on-click-logout=\"logout\" />\n      <el-main>\n        <el-alert\n          v-for=\"message in errorMessages\"\n          :key=\"message\"\n          :class=\"$style['error-alert']\"\n          :title=\"message\"\n          type=\"error\"\n        />\n        <router-view />\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport {\n  Alert,\n  Container,\n  Main,\n} from 'element-ui';\nimport Vue from 'vue';\nimport store from '@/store';\nimport TopNav from '@/components/TopNav.vue';\nimport { ActionTypes } from '@/store/actions';\nimport { mapGetters, mapState } from 'vuex';\n\nexport default Vue.extend({\n  name: 'App',\n\n  components: {\n    [Container.name]: Container,\n    [Main.name]: Main,\n    [Alert.name]: Alert,\n    TopNav,\n  },\n\n  computed: {\n    ...mapState({\n      userName: state => state.user.name,\n      errorMessages: state => {\n        return new Set(\n          state.metadata.globalErrors.map(\n            error => error.message || error.error || error,\n          ),\n        );\n      },\n    }),\n    ...mapGetters(['loggedIn']),\n  },\n\n  methods: {\n    logout() {\n      store.dispatch(ActionTypes.LogoutUser);\n      store.dispatch(ActionTypes.SetMantisMasters, []);\n      this.$router.push('/login');\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\" module>\n#app {\n  display: flex;\n  font-family: 'Helvetica Neue', Arial, sans-serif;\n  font-size: var(--text-base);\n  font-weight: var(--text-normal);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-text-stroke: .33px rgba(0,0,0,.33);\n  text-align: center;\n}\n\n.error-alert {\n  margin: 0.25em;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=0d37e230&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&module=true&\"\n\n\n\n\nfunction injectStyles (context) {\n  \n  this[\"$style\"] = (style0.locals || style0)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  \n)\n\nexport default component.exports","import store from '@/store';\n\nexport default function(to, _from, next) {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!store.getters.loggedIn) {\n      next('/login');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n}\n","export default function(to, _from, _next) {\n  const nearestRouteWithTitle = to.matched\n    .slice()\n    .reverse()\n    .find(r => r.meta && r.meta.title);\n  if (nearestRouteWithTitle) {\n    document.title = nearestRouteWithTitle.meta.title;\n  }\n}\n","import Vue from 'vue';\nimport Router from 'vue-router';\nimport { auth, pageTitle } from '@/middleware';\n\nVue.use(Router);\n\nconst router = new Router({\n  mode: 'hash',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      redirect: { name: 'clusters' },\n    },\n    {\n      path: '/login',\n      name: 'login',\n      meta: { title: 'Mantis - Login' },\n      component: () =>\n        import(/* webpackChunkName: \"login\" */ '@/pages/LoginPage.vue'),\n    },\n    {\n      path: '/jobs',\n      name: 'jobs',\n      meta: { requiresAuth: true, title: 'Mantis - Jobs' },\n      component: () =>\n        import(/* webpackChunkName: \"jobs\" */ '@/pages/JobsPage.vue'),\n    },\n    {\n      path: '/jobs/:jobId',\n      name: 'jobDetail',\n      meta: { requiresAuth: true, title: 'Mantis - Job Detail' },\n      component: () =>\n        import(/* webpackChunkName: 'jobs' */ '@/pages/JobDetailPage.vue'),\n    },\n    {\n      path: '/clusters',\n      name: 'clusters',\n      meta: { requiresAuth: true, title: 'Mantis - Clusters' },\n      component: () =>\n        import(/* webpackChunkName: \"clusters\" */ '@/pages/JobClustersPage.vue'),\n    },\n    {\n      path: '/clusters/create',\n      name: 'clusterCreatePage',\n      meta: { requiresAuth: true, title: 'Mantis - Create Cluster' },\n      component: () =>\n        import(\n          /* webpackChunkName: \"clusters\" */ '@/pages/JobClusterCreatePage.vue'\n        ),\n    },\n    {\n      path: '/clusters/:clusterId',\n      name: 'clusterDetail',\n      meta: { requiresAuth: true, title: 'Mantis - Cluster Detail' },\n      component: () =>\n        import(\n          /* webpackChunkName: \"clusters\" */ '@/pages/JobClusterDetailPage.vue'\n        ),\n    },\n    {\n      path: '/clusters/:clusterId/update',\n      name: 'clusterUpdate',\n      meta: { requiresAuth: true, title: 'Mantis - Cluster Update' },\n      component: () =>\n        import(\n          /* webpackChunkName: \"clusters\" */ '@/pages/JobClusterUpdatePage.vue'\n        ),\n    },\n    {\n      path: '/clusters/:clusterId/submit',\n      name: 'clusterJobSubmit',\n      meta: { requiresAuth: true, title: 'Mantis - Job Cluster Submit Job' },\n      component: () =>\n        import(\n          /* webpackChunkName: \"clusters\" */ '@/pages/JobClusterSubmitJobPage.vue'\n        ),\n    },\n    {\n      path: '/summary',\n      name: 'summary',\n      meta: { requiresAuth: true, title: 'Mantis - Summary' },\n      component: () =>\n        import(/* webpackChunkName: \"summary\" */ '@/pages/SummaryPage.vue'),\n    },\n    {\n      path: '/admin',\n      name: 'admin',\n      meta: { requiresAuth: true, title: 'Mantis - Admin' },\n      component: () =>\n        import(/* webpackChunkName: \"admin\" */ '@/pages/AdminPage.vue'),\n    },\n    {\n      path: '/help',\n      name: 'help',\n      meta: { requiresAuth: false, title: 'Mantis - Help' },\n      component: () =>\n        import(/* webpackChunkName: \"help\" */ '@/pages/HelpPage.vue'),\n    },\n    {\n      path: '/404',\n      name: '404',\n      component: () =>\n        import(/* webpackChunkName: \"404\" */ '@/pages/NotFoundPage.vue'),\n    },\n    {\n      path: '*',\n      redirect: { name: '404' },\n    },\n  ],\n  scrollBehavior(_to, _from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition\n    } else {\n      return { x: 0, y: 0 }\n    }\n  },\n});\n\nrouter.beforeEach((to, from, next) => {\n  auth(to, from, next);\n  pageTitle(to, from, next);\n});\n\nexport default router;\n","import Vue from 'vue';\nimport VueScrollTo from 'vue-scrollto';\nimport VueClipboard from 'vue-clipboard2';\nimport pluginFontAwesome from '@/plugins/font-awesome';\nimport pluginElementUi from '@/plugins/element-ui';\nimport App from '@/App.vue';\nimport router from '@/router';\nimport store from '@/store';\nimport { ActionTypes } from '@/store/actions';\nimport '@/assets/index.scss';\nimport {\n  getMantisMasters,\n  getMesosUrl,\n  getUserEmail,\n  getUserName,\n} from '@/utils/local-storage';\n\nVue.config.productionTip = false;\n\n// Add Plugins\npluginFontAwesome();\npluginElementUi();\nVue.use(VueScrollTo, {\n  container: 'body',\n});\nVue.use(VueClipboard);\n\n(function initializeApp() {\n  const userInfo = {\n    name: getUserName(),\n    email: getUserEmail(),\n  };\n  store.dispatch(ActionTypes.LoginUser, userInfo);\n  store.dispatch(ActionTypes.SetMantisMasters, getMantisMasters());\n  store.dispatch(ActionTypes.SetMesosUrl, getMesosUrl());\n})();\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App),\n}).$mount('#app');\n","export const ActionTypes = {\n  LoginUser: 'LoginUser',\n  LogoutUser: 'LogoutUser',\n  AddGlobalErrors: 'AddGlobalErrors',\n  SetMantisMasters: 'SetMantisMasters',\n  FetchMasterConfigs: 'FetchMasterConfigs',\n  SetMesosUrl: 'SetMesosUrl',\n  FetchJobs: 'FetchJobs',\n  UpdateJobsTablePageSize: 'UpdateJobsTablePageSize',\n  UpdateJobsTablePageNumber: 'UpdateJobsTablePageNumber',\n  FetchJobDetails: 'FetchJobDetails',\n  CreateJobCluster: 'CreateJobCluster',\n  FetchJobClusters: 'FetchJobClusters',\n  FetchArchivedWorkersForJob: 'FetchArchivedWorkersForJob',\n  StreamJobStatus: 'StreamJobStatus',\n  StreamJobOutput: 'StreamJobOutput',\n  ClearJobOutput: 'ClearJobOutput',\n  UpdateCurrentJobOutputMessagePreview: 'UpdateCurrentJobOutputMessagePreview',\n  StopJobOutputStream: 'StopJobOutputStream',\n  KillJobs: 'KillJobs',\n  ResubmitWorker: 'ResubmitWorker',\n  ScaleJobStage: 'ScaleJobStage',\n  ResetJobDetails: 'ResetJobDetails',\n  UpdateClusterTablePageSize: 'UpdateClusterTablePageSize',\n  UpdateClusterTablePageNumber: 'UpdateClusterTablePageNumber',\n  FetchJobClusterDetails: 'FetchJobClusterDetails',\n  FetchJobClusterJobs: 'FetchJobClusterJobs',\n  EnableJobCluster: 'EnableJobCluster',\n  DisableJobCluster: 'DisableJobCluster',\n  DeleteJobCluster: 'DeleteJobCluster',\n  UpdateClusterForm: 'UpdateClusterForm',\n  SubmitJobForCluster: 'SubmitJobForCluster',\n  QuickSubmitJob: 'QuickSubmitJob',\n  FetchLatestJobForCluster: 'FetchLatestJobForCluster',\n  FetchArtifacts: 'FetchArtifacts',\n  FetchJobArtifact: 'FetchJobArtifact',\n  UploadArtifact: 'UploadArtifact',\n  UpdateJobClusterStandard: 'UpdateJobClusterStandard',\n  UpdateJobClusterQuickArtifact: 'UpdateJobClusterQuickArtifact',\n  UpdateJobClusterQuickSla: 'UpdateJobClusterQuickSla',\n  UpdateJobClusterQuickMigrationStrategy: 'UpdateJobClusterQuickMigrationStrategy',\n  UpdateJobClusterQuickLabel: 'UpdateJobClusterQuickLabel',\n};\n","export { default } from  \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-0-0!../node_modules/css-loader/index.js??ref--8-oneOf-0-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-0-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-0-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&module=true&\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-0-0!../node_modules/css-loader/index.js??ref--8-oneOf-0-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-0-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-0-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&module=true&\"","import {\n  createSseEventSource,\n  findClientByRegion,\n  findMantisApiUrlByRegion,\n  getClientsForAllRegions,\n  handleApiRequests,\n} from './BaseService';\n\nconst reason = 'Mantis UI user action';\n\nexport async function fetchJobs(pageSize = 15, offset = 0, searchString = '', labelFilterString = '') {\n  const clients = getClientsForAllRegions();\n  let queryString = searchString\n    ? `&matching=.*${searchString}.*`\n    : '';\n  queryString += labelFilterString ? `&labels=${labelFilterString}` : '';\n\n  const requests = clients.map(({ client }) =>\n    client.get(\n      `/api/v1/jobs/?pageSize=${pageSize}&offset=${offset}&compact=true${queryString}`,\n    ),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function fetchJobDetails(jobId) {\n  const clients = getClientsForAllRegions();\n  const requests = clients.map(({ client }) =>\n    client.get(`/api/v1/jobs/${jobId}`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function fetchJobArchivedWorkers(jobId) {\n  const clients = getClientsForAllRegions();\n  const requests = clients.map(({ client }) =>\n    client.get(`/api/v1/jobs/${jobId}/archivedWorkers`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function resubmitWorker(jobId, workerNumber, userEmail) {\n  const { client } = findClientByRegion();\n  const request = client.post(`/api/v1/jobs/${jobId}/actions/resubmitWorker`, {\n    user: userEmail,\n    workerNumber,\n    reason,\n  });\n\n  return handleApiRequests([request]);\n}\n\nexport async function scaleJobStage(jobId, stageNumber, numWorkers, userEmail) {\n  const { client } = findClientByRegion();\n  const request = client.post(`/api/v1/jobs/${jobId}/actions/scaleStage`, {\n    JobId: jobId,\n    StageNumber: stageNumber,\n    NumWorkers: numWorkers,\n    user: userEmail,\n  });\n\n  return handleApiRequests([request]);\n}\n\nexport async function killJobs(jobIds, userEmail) {\n  const { client } = findClientByRegion();\n  const requests = jobIds.map(jobId =>\n    client.delete(`/api/v1/jobs/${jobId}?user=${userEmail}&reason=${reason}`),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport async function streamJobStatus(jobId, onOpen, onMessage, onError) {\n  const mantisBaseUrl = findMantisApiUrlByRegion();\n  const url = `${mantisBaseUrl}/api/v1/jobstatus/${jobId}`;\n  return createSseEventSource(url, onOpen, onMessage, onError);\n}\n\nexport async function quickSubmitJob(jobConfig) {\n  const clients = getClientsForAllRegions();\n  let requests = clients.map(({ client }) =>\n    client.post(`/api/v1/jobs/actions/quickSubmit`, jobConfig),\n  );\n\n  return handleApiRequests(requests);\n}\n\nexport function streamingOutputUrl(jobId, samplingRate) {\n  const mantisBaseUrl = findMantisApiUrlByRegion();\n  const queryParamString = samplingRate ? `?sampleMSec=${samplingRate}` : '';\n  return `${mantisBaseUrl}/api/v1/jobconnectbyid/${jobId}${queryParamString}`;\n}\n\nexport function streamJobOutput(\n  jobOutputUrl,\n  onOpen,\n  onMessage,\n  onError,\n) {\n  return createSseEventSource(jobOutputUrl, onOpen, onMessage, onError);\n}\n","export { default } from  \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-0-0!../../node_modules/css-loader/index.js??ref--8-oneOf-0-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-0-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-0-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNav.vue?vue&type=style&index=0&lang=scss&module=true&\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-0-0!../../node_modules/css-loader/index.js??ref--8-oneOf-0-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-0-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-0-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNav.vue?vue&type=style&index=0&lang=scss&module=true&\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-controls\":\"TopNav_user-controls_1IBco\"};"],"sourceRoot":""}